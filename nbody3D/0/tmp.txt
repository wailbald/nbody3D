
nbodymieux2.g:     format de fichier elf64-x86-64


Déassemblage de la section .interp :

0000000000000318 <.interp>:
 318:	2f                   	(bad)  
 319:	6c                   	insb   (%dx),%es:(%rdi)
 31a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 321:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 326:	78 2d                	js     355 <_init-0xcab>
 328:	78 38                	js     362 <_init-0xc9e>
 32a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 330:	6f                   	outsl  %ds:(%rsi),(%dx)
 331:	2e 32 00             	xor    %cs:(%rax),%al

Déassemblage de la section .note.gnu.property :

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    $0x0,%al
 33a:	00 00                	add    %al,(%rax)
 33c:	10 00                	adc    %al,(%rax)
 33e:	00 00                	add    %al,(%rax)
 340:	05 00 00 00 47       	add    $0x47000000,%eax
 345:	4e 55                	rex.WRX push %rbp
 347:	00 02                	add    %al,(%rdx)
 349:	00 00                	add    %al,(%rax)
 34b:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
 34f:	00 03                	add    %al,(%rbx)
 351:	00 00                	add    %al,(%rax)
 353:	00 00                	add    %al,(%rax)
 355:	00 00                	add    %al,(%rax)
	...

Déassemblage de la section .note.gnu.build-id :

0000000000000358 <.note.gnu.build-id>:
 358:	04 00                	add    $0x0,%al
 35a:	00 00                	add    %al,(%rax)
 35c:	14 00                	adc    $0x0,%al
 35e:	00 00                	add    %al,(%rax)
 360:	03 00                	add    (%rax),%eax
 362:	00 00                	add    %al,(%rax)
 364:	47                   	rex.RXB
 365:	4e 55                	rex.WRX push %rbp
 367:	00 b6 1d 41 14 09    	add    %dh,0x914411d(%rsi)
 36d:	d4                   	(bad)  
 36e:	23 20                	and    (%rax),%esp
 370:	e4 1d                	in     $0x1d,%al
 372:	91                   	xchg   %eax,%ecx
 373:	eb 6d                	jmp    3e2 <_init-0xc1e>
 375:	7d 1a                	jge    391 <_init-0xc6f>
 377:	c4                   	(bad)  
 378:	b4 7d                	mov    $0x7d,%ah
 37a:	12                   	.byte 0x12
 37b:	87                   	.byte 0x87

Déassemblage de la section .note.ABI-tag :

000000000000037c <.note.ABI-tag>:
 37c:	04 00                	add    $0x0,%al
 37e:	00 00                	add    %al,(%rax)
 380:	10 00                	adc    %al,(%rax)
 382:	00 00                	add    %al,(%rax)
 384:	01 00                	add    %eax,(%rax)
 386:	00 00                	add    %al,(%rax)
 388:	47                   	rex.RXB
 389:	4e 55                	rex.WRX push %rbp
 38b:	00 00                	add    %al,(%rax)
 38d:	00 00                	add    %al,(%rax)
 38f:	00 03                	add    %al,(%rbx)
 391:	00 00                	add    %al,(%rax)
 393:	00 02                	add    %al,(%rdx)
 395:	00 00                	add    %al,(%rax)
 397:	00 00                	add    %al,(%rax)
 399:	00 00                	add    %al,(%rax)
	...

Déassemblage de la section .gnu.hash :

00000000000003a0 <.gnu.hash>:
 3a0:	02 00                	add    (%rax),%al
 3a2:	00 00                	add    %al,(%rax)
 3a4:	0e                   	(bad)  
 3a5:	00 00                	add    %al,(%rax)
 3a7:	00 01                	add    %al,(%rcx)
 3a9:	00 00                	add    %al,(%rax)
 3ab:	00 06                	add    %al,(%rsi)
 3ad:	00 00                	add    %al,(%rax)
 3af:	00 00                	add    %al,(%rax)
 3b1:	00 81 00 00 01 10    	add    %al,0x10010000(%rcx)
 3b7:	00 0e                	add    %cl,(%rsi)
 3b9:	00 00                	add    %al,(%rax)
 3bb:	00 00                	add    %al,(%rax)
 3bd:	00 00                	add    %al,(%rax)
 3bf:	00 28                	add    %ch,(%rax)
 3c1:	1d 8c 1c d1 65       	sbb    $0x65d11c8c,%eax
 3c6:	ce                   	(bad)  
 3c7:	6d                   	insl   (%dx),%es:(%rdi)

Déassemblage de la section .dynsym :

00000000000003c8 <.dynsym>:
	...
 3e0:	ce                   	(bad)  
 3e1:	00 00                	add    %al,(%rax)
 3e3:	00 12                	add    %dl,(%rdx)
	...
 3f5:	00 00                	add    %al,(%rax)
 3f7:	00 0e                	add    %cl,(%rsi)
 3f9:	00 00                	add    %al,(%rax)
 3fb:	00 20                	add    %ah,(%rax)
	...
 40d:	00 00                	add    %al,(%rax)
 40f:	00 7f 00             	add    %bh,0x0(%rdi)
 412:	00 00                	add    %al,(%rax)
 414:	12 00                	adc    (%rax),%al
	...
 426:	00 00                	add    %al,(%rax)
 428:	53                   	push   %rbx
 429:	00 00                	add    %al,(%rax)
 42b:	00 12                	add    %dl,(%rdx)
	...
 43d:	00 00                	add    %al,(%rax)
 43f:	00 bc 00 00 00 12 00 	add    %bh,0x120000(%rax,%rax,1)
	...
 456:	00 00                	add    %al,(%rax)
 458:	84 00                	test   %al,(%rax)
 45a:	00 00                	add    %al,(%rax)
 45c:	12 00                	adc    (%rax),%al
	...
 46e:	00 00                	add    %al,(%rax)
 470:	2a 00                	sub    (%rax),%al
 472:	00 00                	add    %al,(%rax)
 474:	20 00                	and    %al,(%rax)
	...
 486:	00 00                	add    %al,(%rax)
 488:	98                   	cwtl   
 489:	00 00                	add    %al,(%rax)
 48b:	00 12                	add    %dl,(%rdx)
	...
 49d:	00 00                	add    %al,(%rax)
 49f:	00 6b 00             	add    %ch,0x0(%rbx)
 4a2:	00 00                	add    %al,(%rax)
 4a4:	12 00                	adc    (%rax),%al
	...
 4b6:	00 00                	add    %al,(%rax)
 4b8:	72 00                	jb     4ba <_init-0xb46>
 4ba:	00 00                	add    %al,(%rax)
 4bc:	12 00                	adc    (%rax),%al
	...
 4ce:	00 00                	add    %al,(%rax)
 4d0:	39 00                	cmp    %eax,(%rax)
 4d2:	00 00                	add    %al,(%rax)
 4d4:	20 00                	and    %al,(%rax)
	...
 4e6:	00 00                	add    %al,(%rax)
 4e8:	9f                   	lahf   
 4e9:	00 00                	add    %al,(%rax)
 4eb:	00 12                	add    %dl,(%rdx)
	...
 4fd:	00 00                	add    %al,(%rax)
 4ff:	00 93 00 00 00 12    	add    %dl,0x12000000(%rbx)
	...
 515:	00 00                	add    %al,(%rax)
 517:	00 8c 00 00 00 11 00 	add    %cl,0x110000(%rax,%rax,1)
 51e:	1a 00                	sbb    (%rax),%al
 520:	10 40 00             	adc    %al,0x0(%rax)
 523:	00 00                	add    %al,(%rax)
 525:	00 00                	add    %al,(%rax)
 527:	00 08                	add    %cl,(%rax)
 529:	00 00                	add    %al,(%rax)
 52b:	00 00                	add    %al,(%rax)
 52d:	00 00                	add    %al,(%rax)
 52f:	00 ad 00 00 00 22    	add    %ch,0x22000000(%rbp)
	...

Déassemblage de la section .dynstr :

0000000000000548 <.dynstr>:
 548:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 54c:	67 6f                	outsl  %ds:(%esi),(%dx)
 54e:	6d                   	insl   (%dx),%es:(%rdi)
 54f:	70 2e                	jo     57f <_init-0xa81>
 551:	73 6f                	jae    5c2 <_init-0xa3e>
 553:	2e 31 00             	xor    %eax,%cs:(%rax)
 556:	5f                   	pop    %rdi
 557:	49 54                	rex.WB push %r12
 559:	4d 5f                	rex.WRB pop %r15
 55b:	64 65 72 65          	fs gs jb 5c4 <_init-0xa3c>
 55f:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 566:	4d 
 567:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 569:	6f                   	outsl  %ds:(%rsi),(%dx)
 56a:	6e                   	outsb  %ds:(%rsi),(%dx)
 56b:	65 54                	gs push %rsp
 56d:	61                   	(bad)  
 56e:	62                   	(bad)  
 56f:	6c                   	insb   (%dx),%es:(%rdi)
 570:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 574:	67 6d                	insl   (%dx),%es:(%edi)
 576:	6f                   	outsl  %ds:(%rsi),(%dx)
 577:	6e                   	outsb  %ds:(%rsi),(%dx)
 578:	5f                   	pop    %rdi
 579:	73 74                	jae    5ef <_init-0xa11>
 57b:	61                   	(bad)  
 57c:	72 74                	jb     5f2 <_init-0xa0e>
 57e:	5f                   	pop    %rdi
 57f:	5f                   	pop    %rdi
 580:	00 5f 49             	add    %bl,0x49(%rdi)
 583:	54                   	push   %rsp
 584:	4d 5f                	rex.WRB pop %r15
 586:	72 65                	jb     5ed <_init-0xa13>
 588:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 58f:	4d 
 590:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 592:	6f                   	outsl  %ds:(%rsi),(%dx)
 593:	6e                   	outsb  %ds:(%rsi),(%dx)
 594:	65 54                	gs push %rsp
 596:	61                   	(bad)  
 597:	62                   	(bad)  
 598:	6c                   	insb   (%dx),%es:(%rdi)
 599:	65 00 6f 6d          	add    %ch,%gs:0x6d(%rdi)
 59d:	70 5f                	jo     5fe <_init-0xa02>
 59f:	67 65 74 5f          	addr32 gs je 602 <_init-0x9fe>
 5a3:	77 74                	ja     619 <_init-0x9e7>
 5a5:	69 6d 65 00 6c 69 62 	imul   $0x62696c00,0x65(%rbp),%ebp
 5ac:	63 2e                	movslq (%rsi),%ebp
 5ae:	73 6f                	jae    61f <_init-0x9e1>
 5b0:	2e 36 00 66 66       	cs add %ah,%ss:0x66(%rsi)
 5b5:	6c                   	insb   (%dx),%es:(%rdi)
 5b6:	75 73                	jne    62b <_init-0x9d5>
 5b8:	68 00 5f 5f 70       	pushq  $0x705f5f00
 5bd:	72 69                	jb     628 <_init-0x9d8>
 5bf:	6e                   	outsb  %ds:(%rsi),(%dx)
 5c0:	74 66                	je     628 <_init-0x9d8>
 5c2:	5f                   	pop    %rdi
 5c3:	63 68 6b             	movslq 0x6b(%rax),%ebp
 5c6:	00 70 75             	add    %dh,0x75(%rax)
 5c9:	74 73                	je     63e <_init-0x9c2>
 5cb:	00 73 74             	add    %dh,0x74(%rbx)
 5ce:	72 74                	jb     644 <_init-0x9bc>
 5d0:	6f                   	outsl  %ds:(%rsi),(%dx)
 5d1:	6c                   	insb   (%dx),%es:(%rdi)
 5d2:	6c                   	insb   (%dx),%es:(%rdi)
 5d3:	00 73 74             	add    %dh,0x74(%rbx)
 5d6:	64 6f                	outsl  %fs:(%rsi),(%dx)
 5d8:	75 74                	jne    64e <_init-0x9b2>
 5da:	00 72 61             	add    %dh,0x61(%rdx)
 5dd:	6e                   	outsb  %ds:(%rsi),(%dx)
 5de:	64 00 6d 61          	add    %ch,%fs:0x61(%rbp)
 5e2:	6c                   	insb   (%dx),%es:(%rdi)
 5e3:	6c                   	insb   (%dx),%es:(%rdi)
 5e4:	6f                   	outsl  %ds:(%rsi),(%dx)
 5e5:	63 00                	movslq (%rax),%eax
 5e7:	61                   	(bad)  
 5e8:	6c                   	insb   (%dx),%es:(%rdi)
 5e9:	69 67 6e 65 64 5f 61 	imul   $0x615f6465,0x6e(%rdi),%esp
 5f0:	6c                   	insb   (%dx),%es:(%rdi)
 5f1:	6c                   	insb   (%dx),%es:(%rdi)
 5f2:	6f                   	outsl  %ds:(%rsi),(%dx)
 5f3:	63 00                	movslq (%rax),%eax
 5f5:	5f                   	pop    %rdi
 5f6:	5f                   	pop    %rdi
 5f7:	63 78 61             	movslq 0x61(%rax),%edi
 5fa:	5f                   	pop    %rdi
 5fb:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 601:	7a 65                	jp     668 <_init-0x998>
 603:	00 5f 5f             	add    %bl,0x5f(%rdi)
 606:	6c                   	insb   (%dx),%es:(%rdi)
 607:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 60e:	72 74                	jb     684 <_init-0x97c>
 610:	5f                   	pop    %rdi
 611:	6d                   	insl   (%dx),%es:(%rdi)
 612:	61                   	(bad)  
 613:	69 6e 00 66 72 65 65 	imul   $0x65657266,0x0(%rsi),%ebp
 61a:	00 4f 4d             	add    %cl,0x4d(%rdi)
 61d:	50                   	push   %rax
 61e:	5f                   	pop    %rdi
 61f:	32 2e                	xor    (%rsi),%ch
 621:	30 00                	xor    %al,(%rax)
 623:	47                   	rex.RXB
 624:	4c                   	rex.WR
 625:	49                   	rex.WB
 626:	42                   	rex.X
 627:	43 5f                	rex.XB pop %r15
 629:	32 2e                	xor    (%rsi),%ch
 62b:	31 36                	xor    %esi,(%rsi)
 62d:	00 47 4c             	add    %al,0x4c(%rdi)
 630:	49                   	rex.WB
 631:	42                   	rex.X
 632:	43 5f                	rex.XB pop %r15
 634:	32 2e                	xor    (%rsi),%ch
 636:	33 2e                	xor    (%rsi),%ebp
 638:	34 00                	xor    $0x0,%al
 63a:	47                   	rex.RXB
 63b:	4c                   	rex.WR
 63c:	49                   	rex.WB
 63d:	42                   	rex.X
 63e:	43 5f                	rex.XB pop %r15
 640:	32 2e                	xor    (%rsi),%ch
 642:	32 2e                	xor    (%rsi),%ch
 644:	35                   	.byte 0x35
	...

Déassemblage de la section .gnu.version :

0000000000000646 <.gnu.version>:
 646:	00 00                	add    %al,(%rax)
 648:	02 00                	add    (%rax),%al
 64a:	00 00                	add    %al,(%rax)
 64c:	02 00                	add    (%rax),%al
 64e:	03 00                	add    (%rax),%eax
 650:	02 00                	add    (%rax),%al
 652:	02 00                	add    (%rax),%al
 654:	00 00                	add    %al,(%rax)
 656:	02 00                	add    (%rax),%al
 658:	02 00                	add    (%rax),%al
 65a:	04 00                	add    $0x0,%al
 65c:	00 00                	add    %al,(%rax)
 65e:	05 00 02 00 02       	add    $0x2000200,%eax
 663:	00 02                	add    %al,(%rdx)
	...

Déassemblage de la section .gnu.version_r :

0000000000000668 <.gnu.version_r>:
 668:	01 00                	add    %eax,(%rax)
 66a:	01 00                	add    %eax,(%rax)
 66c:	01 00                	add    %eax,(%rax)
 66e:	00 00                	add    %al,(%rax)
 670:	10 00                	adc    %al,(%rax)
 672:	00 00                	add    %al,(%rax)
 674:	20 00                	and    %al,(%rax)
 676:	00 00                	add    %al,(%rax)
 678:	40 25 26 04 00 00    	rex and $0x426,%eax
 67e:	03 00                	add    (%rax),%eax
 680:	d3 00                	roll   %cl,(%rax)
 682:	00 00                	add    %al,(%rax)
 684:	00 00                	add    %al,(%rax)
 686:	00 00                	add    %al,(%rax)
 688:	01 00                	add    %eax,(%rax)
 68a:	03 00                	add    (%rax),%eax
 68c:	61                   	(bad)  
 68d:	00 00                	add    %al,(%rax)
 68f:	00 10                	add    %dl,(%rax)
 691:	00 00                	add    %al,(%rax)
 693:	00 00                	add    %al,(%rax)
 695:	00 00                	add    %al,(%rax)
 697:	00 96 91 96 06 00    	add    %dl,0x69691(%rsi)
 69d:	00 05 00 db 00 00    	add    %al,0xdb00(%rip)        # e1a3 <_end+0xa183>
 6a3:	00 10                	add    %dl,(%rax)
 6a5:	00 00                	add    %al,(%rax)
 6a7:	00 74 19 69          	add    %dh,0x69(%rcx,%rbx,1)
 6ab:	09 00                	or     %eax,(%rax)
 6ad:	00 04 00             	add    %al,(%rax,%rax,1)
 6b0:	e6 00                	out    %al,$0x0
 6b2:	00 00                	add    %al,(%rax)
 6b4:	10 00                	adc    %al,(%rax)
 6b6:	00 00                	add    %al,(%rax)
 6b8:	75 1a                	jne    6d4 <_init-0x92c>
 6ba:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 6c0:	f2 00 00             	repnz add %al,(%rax)
 6c3:	00 00                	add    %al,(%rax)
 6c5:	00 00                	add    %al,(%rax)
	...

Déassemblage de la section .rela.dyn :

00000000000006c8 <.rela.dyn>:
 6c8:	60                   	(bad)  
 6c9:	3d 00 00 00 00       	cmp    $0x0,%eax
 6ce:	00 00                	add    %al,(%rax)
 6d0:	08 00                	or     %al,(%rax)
 6d2:	00 00                	add    %al,(%rax)
 6d4:	00 00                	add    %al,(%rax)
 6d6:	00 00                	add    %al,(%rax)
 6d8:	90                   	nop
 6d9:	15 00 00 00 00       	adc    $0x0,%eax
 6de:	00 00                	add    %al,(%rax)
 6e0:	68 3d 00 00 00       	pushq  $0x3d
 6e5:	00 00                	add    %al,(%rax)
 6e7:	00 08                	add    %cl,(%rax)
 6e9:	00 00                	add    %al,(%rax)
 6eb:	00 00                	add    %al,(%rax)
 6ed:	00 00                	add    %al,(%rax)
 6ef:	00 90 14 00 00 00    	add    %dl,0x14(%rax)
 6f5:	00 00                	add    %al,(%rax)
 6f7:	00 70 3d             	add    %dh,0x3d(%rax)
 6fa:	00 00                	add    %al,(%rax)
 6fc:	00 00                	add    %al,(%rax)
 6fe:	00 00                	add    %al,(%rax)
 700:	08 00                	or     %al,(%rax)
 702:	00 00                	add    %al,(%rax)
 704:	00 00                	add    %al,(%rax)
 706:	00 00                	add    %al,(%rax)
 708:	50                   	push   %rax
 709:	15 00 00 00 00       	adc    $0x0,%eax
 70e:	00 00                	add    %al,(%rax)
 710:	08 40 00             	or     %al,0x0(%rax)
 713:	00 00                	add    %al,(%rax)
 715:	00 00                	add    %al,(%rax)
 717:	00 08                	add    %cl,(%rax)
 719:	00 00                	add    %al,(%rax)
 71b:	00 00                	add    %al,(%rax)
 71d:	00 00                	add    %al,(%rax)
 71f:	00 08                	add    %cl,(%rax)
 721:	40 00 00             	add    %al,(%rax)
 724:	00 00                	add    %al,(%rax)
 726:	00 00                	add    %al,(%rax)
 728:	d8 3f                	fdivrs (%rdi)
 72a:	00 00                	add    %al,(%rax)
 72c:	00 00                	add    %al,(%rax)
 72e:	00 00                	add    %al,(%rax)
 730:	06                   	(bad)  
 731:	00 00                	add    %al,(%rax)
 733:	00 02                	add    %al,(%rdx)
	...
 73d:	00 00                	add    %al,(%rax)
 73f:	00 e0                	add    %ah,%al
 741:	3f                   	(bad)  
 742:	00 00                	add    %al,(%rax)
 744:	00 00                	add    %al,(%rax)
 746:	00 00                	add    %al,(%rax)
 748:	06                   	(bad)  
 749:	00 00                	add    %al,(%rax)
 74b:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 751 <_init-0x8af>
 751:	00 00                	add    %al,(%rax)
 753:	00 00                	add    %al,(%rax)
 755:	00 00                	add    %al,(%rax)
 757:	00 e8                	add    %ch,%al
 759:	3f                   	(bad)  
 75a:	00 00                	add    %al,(%rax)
 75c:	00 00                	add    %al,(%rax)
 75e:	00 00                	add    %al,(%rax)
 760:	06                   	(bad)  
 761:	00 00                	add    %al,(%rax)
 763:	00 07                	add    %al,(%rdi)
	...
 76d:	00 00                	add    %al,(%rax)
 76f:	00 f0                	add    %dh,%al
 771:	3f                   	(bad)  
 772:	00 00                	add    %al,(%rax)
 774:	00 00                	add    %al,(%rax)
 776:	00 00                	add    %al,(%rax)
 778:	06                   	(bad)  
 779:	00 00                	add    %al,(%rax)
 77b:	00 0b                	add    %cl,(%rbx)
	...
 785:	00 00                	add    %al,(%rax)
 787:	00 f8                	add    %bh,%al
 789:	3f                   	(bad)  
 78a:	00 00                	add    %al,(%rax)
 78c:	00 00                	add    %al,(%rax)
 78e:	00 00                	add    %al,(%rax)
 790:	06                   	(bad)  
 791:	00 00                	add    %al,(%rax)
 793:	00 0f                	add    %cl,(%rdi)
	...
 79d:	00 00                	add    %al,(%rax)
 79f:	00 10                	add    %dl,(%rax)
 7a1:	40 00 00             	add    %al,(%rax)
 7a4:	00 00                	add    %al,(%rax)
 7a6:	00 00                	add    %al,(%rax)
 7a8:	05 00 00 00 0e       	add    $0xe000000,%eax
	...

Déassemblage de la section .rela.plt :

00000000000007b8 <.rela.plt>:
 7b8:	90                   	nop
 7b9:	3f                   	(bad)  
 7ba:	00 00                	add    %al,(%rax)
 7bc:	00 00                	add    %al,(%rax)
 7be:	00 00                	add    %al,(%rax)
 7c0:	07                   	(bad)  
 7c1:	00 00                	add    %al,(%rax)
 7c3:	00 01                	add    %al,(%rcx)
	...
 7cd:	00 00                	add    %al,(%rax)
 7cf:	00 98 3f 00 00 00    	add    %bl,0x3f(%rax)
 7d5:	00 00                	add    %al,(%rax)
 7d7:	00 07                	add    %al,(%rdi)
 7d9:	00 00                	add    %al,(%rax)
 7db:	00 03                	add    %al,(%rbx)
	...
 7e5:	00 00                	add    %al,(%rax)
 7e7:	00 a0 3f 00 00 00    	add    %ah,0x3f(%rax)
 7ed:	00 00                	add    %al,(%rax)
 7ef:	00 07                	add    %al,(%rdi)
 7f1:	00 00                	add    %al,(%rax)
 7f3:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 7fe:	00 00                	add    %al,(%rax)
 800:	a8 3f                	test   $0x3f,%al
 802:	00 00                	add    %al,(%rax)
 804:	00 00                	add    %al,(%rax)
 806:	00 00                	add    %al,(%rax)
 808:	07                   	(bad)  
 809:	00 00                	add    %al,(%rax)
 80b:	00 06                	add    %al,(%rsi)
	...
 815:	00 00                	add    %al,(%rax)
 817:	00 b0 3f 00 00 00    	add    %dh,0x3f(%rax)
 81d:	00 00                	add    %al,(%rax)
 81f:	00 07                	add    %al,(%rdi)
 821:	00 00                	add    %al,(%rax)
 823:	00 08                	add    %cl,(%rax)
	...
 82d:	00 00                	add    %al,(%rax)
 82f:	00 b8 3f 00 00 00    	add    %bh,0x3f(%rax)
 835:	00 00                	add    %al,(%rax)
 837:	00 07                	add    %al,(%rdi)
 839:	00 00                	add    %al,(%rax)
 83b:	00 09                	add    %cl,(%rcx)
	...
 845:	00 00                	add    %al,(%rax)
 847:	00 c0                	add    %al,%al
 849:	3f                   	(bad)  
 84a:	00 00                	add    %al,(%rax)
 84c:	00 00                	add    %al,(%rax)
 84e:	00 00                	add    %al,(%rax)
 850:	07                   	(bad)  
 851:	00 00                	add    %al,(%rax)
 853:	00 0a                	add    %cl,(%rdx)
	...
 85d:	00 00                	add    %al,(%rax)
 85f:	00 c8                	add    %cl,%al
 861:	3f                   	(bad)  
 862:	00 00                	add    %al,(%rax)
 864:	00 00                	add    %al,(%rax)
 866:	00 00                	add    %al,(%rax)
 868:	07                   	(bad)  
 869:	00 00                	add    %al,(%rax)
 86b:	00 0c 00             	add    %cl,(%rax,%rax,1)
	...
 876:	00 00                	add    %al,(%rax)
 878:	d0 3f                	sarb   (%rdi)
 87a:	00 00                	add    %al,(%rax)
 87c:	00 00                	add    %al,(%rax)
 87e:	00 00                	add    %al,(%rax)
 880:	07                   	(bad)  
 881:	00 00                	add    %al,(%rax)
 883:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 889 <_init-0x777>
 889:	00 00                	add    %al,(%rax)
 88b:	00 00                	add    %al,(%rax)
 88d:	00 00                	add    %al,(%rax)
	...

Déassemblage de la section .init :

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Déassemblage de la section .plt :

0000000000001020 <.plt>:
    1020:	ff 35 5a 2f 00 00    	pushq  0x2f5a(%rip)        # 3f80 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 5b 2f 00 00 	bnd jmpq *0x2f5b(%rip)        # 3f88 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	pushq  $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmpq 1020 <.plt>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	pushq  $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmpq 1020 <.plt>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	pushq  $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmpq 1020 <.plt>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	pushq  $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmpq 1020 <.plt>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	pushq  $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmpq 1020 <.plt>
    109f:	90                   	nop
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	68 07 00 00 00       	pushq  $0x7
    10a9:	f2 e9 71 ff ff ff    	bnd jmpq 1020 <.plt>
    10af:	90                   	nop
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	68 08 00 00 00       	pushq  $0x8
    10b9:	f2 e9 61 ff ff ff    	bnd jmpq 1020 <.plt>
    10bf:	90                   	nop

Déassemblage de la section .plt.got :

00000000000010c0 <__cxa_finalize@plt>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	f2 ff 25 2d 2f 00 00 	bnd jmpq *0x2f2d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    10cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Déassemblage de la section .plt.sec :

00000000000010d0 <free@plt>:
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	f2 ff 25 b5 2e 00 00 	bnd jmpq *0x2eb5(%rip)        # 3f90 <free@GLIBC_2.2.5>
    10db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010e0 <puts@plt>:
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	f2 ff 25 ad 2e 00 00 	bnd jmpq *0x2ead(%rip)        # 3f98 <puts@GLIBC_2.2.5>
    10eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010f0 <omp_get_wtime@plt>:
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	f2 ff 25 a5 2e 00 00 	bnd jmpq *0x2ea5(%rip)        # 3fa0 <omp_get_wtime@OMP_2.0>
    10fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001100 <strtoll@plt>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	f2 ff 25 9d 2e 00 00 	bnd jmpq *0x2e9d(%rip)        # 3fa8 <strtoll@GLIBC_2.2.5>
    110b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001110 <malloc@plt>:
    1110:	f3 0f 1e fa          	endbr64 
    1114:	f2 ff 25 95 2e 00 00 	bnd jmpq *0x2e95(%rip)        # 3fb0 <malloc@GLIBC_2.2.5>
    111b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001120 <fflush@plt>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	f2 ff 25 8d 2e 00 00 	bnd jmpq *0x2e8d(%rip)        # 3fb8 <fflush@GLIBC_2.2.5>
    112b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001130 <__printf_chk@plt>:
    1130:	f3 0f 1e fa          	endbr64 
    1134:	f2 ff 25 85 2e 00 00 	bnd jmpq *0x2e85(%rip)        # 3fc0 <__printf_chk@GLIBC_2.3.4>
    113b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001140 <aligned_alloc@plt>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	f2 ff 25 7d 2e 00 00 	bnd jmpq *0x2e7d(%rip)        # 3fc8 <aligned_alloc@GLIBC_2.16>
    114b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001150 <rand@plt>:
    1150:	f3 0f 1e fa          	endbr64 
    1154:	f2 ff 25 75 2e 00 00 	bnd jmpq *0x2e75(%rip)        # 3fd0 <rand@GLIBC_2.2.5>
    115b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Déassemblage de la section .text :

0000000000001160 <main>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	41 56                	push   %r14
    1166:	41 55                	push   %r13
    1168:	41 54                	push   %r12
    116a:	41 bc 00 40 00 00    	mov    $0x4000,%r12d
    1170:	55                   	push   %rbp
    1171:	53                   	push   %rbx
    1172:	48 8d 64 24 d0       	lea    -0x30(%rsp),%rsp
    1177:	83 ff 01             	cmp    $0x1,%edi
    117a:	7e 13                	jle    118f <main+0x2f>
    117c:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
    1180:	ba 0a 00 00 00       	mov    $0xa,%edx
    1185:	31 f6                	xor    %esi,%esi
    1187:	e8 74 ff ff ff       	callq  1100 <strtoll@plt>
    118c:	4c 8d 20             	lea    (%rax),%r12
    118f:	4d 89 e5             	mov    %r12,%r13
    1192:	4e 8d 34 a5 00 00 00 	lea    0x0(,%r12,4),%r14
    1199:	00 
    119a:	4d 01 ed             	add    %r13,%r13
    119d:	31 db                	xor    %ebx,%ebx
    119f:	4d 01 e5             	add    %r12,%r13
    11a2:	49 c1 e5 04          	shl    $0x4,%r13
    11a6:	4c 89 ef             	mov    %r13,%rdi
    11a9:	e8 62 ff ff ff       	callq  1110 <malloc@plt>
    11ae:	49 8d 36             	lea    (%r14),%rsi
    11b1:	bf 40 00 00 00       	mov    $0x40,%edi
    11b6:	48 8d 28             	lea    (%rax),%rbp
    11b9:	e8 82 ff ff ff       	callq  1140 <aligned_alloc@plt>
    11be:	49 8d 36             	lea    (%r14),%rsi
    11c1:	bf 40 00 00 00       	mov    $0x40,%edi
    11c6:	48 89 45 00          	mov    %rax,0x0(%rbp)
    11ca:	e8 71 ff ff ff       	callq  1140 <aligned_alloc@plt>
    11cf:	49 8d 36             	lea    (%r14),%rsi
    11d2:	bf 40 00 00 00       	mov    $0x40,%edi
    11d7:	48 89 45 08          	mov    %rax,0x8(%rbp)
    11db:	e8 60 ff ff ff       	callq  1140 <aligned_alloc@plt>
    11e0:	49 8d 36             	lea    (%r14),%rsi
    11e3:	bf 40 00 00 00       	mov    $0x40,%edi
    11e8:	48 89 45 10          	mov    %rax,0x10(%rbp)
    11ec:	e8 4f ff ff ff       	callq  1140 <aligned_alloc@plt>
    11f1:	49 8d 36             	lea    (%r14),%rsi
    11f4:	bf 40 00 00 00       	mov    $0x40,%edi
    11f9:	48 89 45 18          	mov    %rax,0x18(%rbp)
    11fd:	e8 3e ff ff ff       	callq  1140 <aligned_alloc@plt>
    1202:	49 8d 36             	lea    (%r14),%rsi
    1205:	bf 40 00 00 00       	mov    $0x40,%edi
    120a:	48 89 45 20          	mov    %rax,0x20(%rbp)
    120e:	e8 2d ff ff ff       	callq  1140 <aligned_alloc@plt>
    1213:	49 8d 34 24          	lea    (%r12),%rsi
    1217:	48 8d 7d 00          	lea    0x0(%rbp),%rdi
    121b:	48 89 45 28          	mov    %rax,0x28(%rbp)
    121f:	e8 7c 03 00 00       	callq  15a0 <init>
    1224:	49 8d 4d 00          	lea    0x0(%r13),%rcx
    1228:	4d 8d 45 00          	lea    0x0(%r13),%r8
    122c:	48 c1 e9 0a          	shr    $0xa,%rcx
    1230:	49 8d 55 00          	lea    0x0(%r13),%rdx
    1234:	49 c1 e8 14          	shr    $0x14,%r8
    1238:	48 8d 35 c9 0d 00 00 	lea    0xdc9(%rip),%rsi        # 2008 <_IO_stdin_used+0x8>
    123f:	bf 01 00 00 00       	mov    $0x1,%edi
    1244:	31 c0                	xor    %eax,%eax
    1246:	e8 e5 fe ff ff       	callq  1130 <__printf_chk@plt>
    124b:	4c 8d 0d 5c 0e 00 00 	lea    0xe5c(%rip),%r9        # 20ae <_IO_stdin_used+0xae>
    1252:	4c 8d 05 5d 0e 00 00 	lea    0xe5d(%rip),%r8        # 20b6 <_IO_stdin_used+0xb6>
    1259:	48 8d 0d 61 0e 00 00 	lea    0xe61(%rip),%rcx        # 20c1 <_IO_stdin_used+0xc1>
    1260:	48 8d 15 62 0e 00 00 	lea    0xe62(%rip),%rdx        # 20c9 <_IO_stdin_used+0xc9>
    1267:	48 8d 35 60 0e 00 00 	lea    0xe60(%rip),%rsi        # 20ce <_IO_stdin_used+0xce>
    126e:	bf 01 00 00 00       	mov    $0x1,%edi
    1273:	31 c0                	xor    %eax,%eax
    1275:	e8 b6 fe ff ff       	callq  1130 <__printf_chk@plt>
    127a:	48 8b 3d 8f 2d 00 00 	mov    0x2d8f(%rip),%rdi        # 4010 <stdout@@GLIBC_2.2.5>
    1281:	e8 9a fe ff ff       	callq  1120 <fflush@plt>
    1286:	62 d1 fe 08 7b c4    	vcvtusi2ss %r12,%xmm0,%xmm0
    128c:	49 8d 44 24 ff       	lea    -0x1(%r12),%rax
    1291:	62 f1 f6 08 7b c8    	vcvtusi2ss %rax,%xmm1,%xmm1
    1297:	c5 d9 ef e4          	vpxor  %xmm4,%xmm4,%xmm4
    129b:	c5 fb 11 64 24 10    	vmovsd %xmm4,0x10(%rsp)
    12a1:	c5 fb 11 64 24 08    	vmovsd %xmm4,0x8(%rsp)
    12a7:	c5 f2 59 c8          	vmulss %xmm0,%xmm1,%xmm1
    12ab:	c5 fa 5a c0          	vcvtss2sd %xmm0,%xmm0,%xmm0
    12af:	c5 f2 5a d9          	vcvtss2sd %xmm1,%xmm1,%xmm3
    12b3:	c5 fb 59 05 c5 0e 00 	vmulsd 0xec5(%rip),%xmm0,%xmm0        # 2180 <_IO_stdin_used+0x180>
    12ba:	00 
    12bb:	c5 fb 11 5c 24 20    	vmovsd %xmm3,0x20(%rsp)
    12c1:	c4 e2 e1 b9 05 be 0e 	vfmadd231sd 0xebe(%rip),%xmm3,%xmm0        # 2188 <_IO_stdin_used+0x188>
    12c8:	00 00 
    12ca:	c5 fb 59 05 be 0e 00 	vmulsd 0xebe(%rip),%xmm0,%xmm0        # 2190 <_IO_stdin_used+0x190>
    12d1:	00 
    12d2:	c5 fb 5a c0          	vcvtsd2ss %xmm0,%xmm0,%xmm0
    12d6:	c5 fa 5a d8          	vcvtss2sd %xmm0,%xmm0,%xmm3
    12da:	c5 fa 59 c0          	vmulss %xmm0,%xmm0,%xmm0
    12de:	c5 fb 11 5c 24 18    	vmovsd %xmm3,0x18(%rsp)
    12e4:	c5 fa 5a d8          	vcvtss2sd %xmm0,%xmm0,%xmm3
    12e8:	c5 fb 11 5c 24 28    	vmovsd %xmm3,0x28(%rsp)
    12ee:	eb 59                	jmp    1349 <main+0x1e9>
    12f0:	c5 eb 58 74 24 08    	vaddsd 0x8(%rsp),%xmm2,%xmm6
    12f6:	c5 fb 10 64 24 10    	vmovsd 0x10(%rsp),%xmm4
    12fc:	48 8d 0d e5 0d 00 00 	lea    0xde5(%rip),%rcx        # 20e8 <_IO_stdin_used+0xe8>
    1303:	48 8d 13             	lea    (%rbx),%rdx
    1306:	48 8d 35 dc 0d 00 00 	lea    0xddc(%rip),%rsi        # 20e9 <_IO_stdin_used+0xe9>
    130d:	bf 01 00 00 00       	mov    $0x1,%edi
    1312:	c4 e2 e1 b9 64 24 28 	vfmadd231sd 0x28(%rsp),%xmm3,%xmm4
    1319:	c5 fb 11 74 24 08    	vmovsd %xmm6,0x8(%rsp)
    131f:	c5 fb 11 64 24 10    	vmovsd %xmm4,0x10(%rsp)
    1325:	b8 03 00 00 00       	mov    $0x3,%eax
    132a:	e8 01 fe ff ff       	callq  1130 <__printf_chk@plt>
    132f:	48 8b 3d da 2c 00 00 	mov    0x2cda(%rip),%rdi        # 4010 <stdout@@GLIBC_2.2.5>
    1336:	e8 e5 fd ff ff       	callq  1120 <fflush@plt>
    133b:	48 83 fb 09          	cmp    $0x9,%rbx
    133f:	0f 84 8b 00 00 00    	je     13d0 <main+0x270>
    1345:	48 8d 5b 01          	lea    0x1(%rbx),%rbx
    1349:	e8 a2 fd ff ff       	callq  10f0 <omp_get_wtime@plt>
    134e:	c5 fb 11 04 24       	vmovsd %xmm0,(%rsp)
    1353:	49 8d 34 24          	lea    (%r12),%rsi
    1357:	c5 fa 10 05 d1 0d 00 	vmovss 0xdd1(%rip),%xmm0        # 2130 <_IO_stdin_used+0x130>
    135e:	00 
    135f:	48 8d 7d 00          	lea    0x0(%rbp),%rdi
    1363:	e8 48 03 00 00       	callq  16b0 <move_particles>
    1368:	e8 83 fd ff ff       	callq  10f0 <omp_get_wtime@plt>
    136d:	c5 fb 5c 04 24       	vsubsd (%rsp),%xmm0,%xmm0
    1372:	c5 fb 10 35 1e 0e 00 	vmovsd 0xe1e(%rip),%xmm6        # 2198 <_IO_stdin_used+0x198>
    1379:	00 
    137a:	48 83 fb 02          	cmp    $0x2,%rbx
    137e:	c5 cb 5e d0          	vdivsd %xmm0,%xmm6,%xmm2
    1382:	c5 eb 59 da          	vmulsd %xmm2,%xmm2,%xmm3
    1386:	c5 eb 59 4c 24 20    	vmulsd 0x20(%rsp),%xmm2,%xmm1
    138c:	c5 eb 59 54 24 18    	vmulsd 0x18(%rsp),%xmm2,%xmm2
    1392:	0f 87 58 ff ff ff    	ja     12f0 <main+0x190>
    1398:	48 8d 0d 7d 0d 00 00 	lea    0xd7d(%rip),%rcx        # 211c <_IO_stdin_used+0x11c>
    139f:	48 8d 13             	lea    (%rbx),%rdx
    13a2:	48 8d 35 40 0d 00 00 	lea    0xd40(%rip),%rsi        # 20e9 <_IO_stdin_used+0xe9>
    13a9:	bf 01 00 00 00       	mov    $0x1,%edi
    13ae:	b8 03 00 00 00       	mov    $0x3,%eax
    13b3:	e8 78 fd ff ff       	callq  1130 <__printf_chk@plt>
    13b8:	48 8b 3d 51 2c 00 00 	mov    0x2c51(%rip),%rdi        # 4010 <stdout@@GLIBC_2.2.5>
    13bf:	e8 5c fd ff ff       	callq  1120 <fflush@plt>
    13c4:	e9 7c ff ff ff       	jmpq   1345 <main+0x1e5>
    13c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    13d0:	c5 fb 10 0d c8 0d 00 	vmovsd 0xdc8(%rip),%xmm1        # 21a0 <_IO_stdin_used+0x1a0>
    13d7:	00 
    13d8:	48 8d 3d 69 0c 00 00 	lea    0xc69(%rip),%rdi        # 2048 <_IO_stdin_used+0x48>
    13df:	c5 f3 59 44 24 08    	vmulsd 0x8(%rsp),%xmm1,%xmm0
    13e5:	c5 fb 59 d0          	vmulsd %xmm0,%xmm0,%xmm2
    13e9:	c5 fb 11 44 24 08    	vmovsd %xmm0,0x8(%rsp)
    13ef:	c4 e2 e9 9b 4c 24 10 	vfmsub132sd 0x10(%rsp),%xmm2,%xmm1
    13f6:	c5 f3 51 c9          	vsqrtsd %xmm1,%xmm1,%xmm1
    13fa:	c5 fb 11 0c 24       	vmovsd %xmm1,(%rsp)
    13ff:	e8 dc fc ff ff       	callq  10e0 <puts@plt>
    1404:	c5 fb 10 0c 24       	vmovsd (%rsp),%xmm1
    1409:	48 8d 0d d8 0c 00 00 	lea    0xcd8(%rip),%rcx        # 20e8 <_IO_stdin_used+0xe8>
    1410:	c5 fb 10 44 24 08    	vmovsd 0x8(%rsp),%xmm0
    1416:	48 8d 15 ea 0c 00 00 	lea    0xcea(%rip),%rdx        # 2107 <_IO_stdin_used+0x107>
    141d:	48 8d 35 5c 0c 00 00 	lea    0xc5c(%rip),%rsi        # 2080 <_IO_stdin_used+0x80>
    1424:	bf 01 00 00 00       	mov    $0x1,%edi
    1429:	b8 02 00 00 00       	mov    $0x2,%eax
    142e:	e8 fd fc ff ff       	callq  1130 <__printf_chk@plt>
    1433:	48 8d 3d 0e 0c 00 00 	lea    0xc0e(%rip),%rdi        # 2048 <_IO_stdin_used+0x48>
    143a:	e8 a1 fc ff ff       	callq  10e0 <puts@plt>
    143f:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
    1443:	e8 88 fc ff ff       	callq  10d0 <free@plt>
    1448:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    144c:	e8 7f fc ff ff       	callq  10d0 <free@plt>
    1451:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
    1455:	e8 76 fc ff ff       	callq  10d0 <free@plt>
    145a:	48 8b 7d 18          	mov    0x18(%rbp),%rdi
    145e:	e8 6d fc ff ff       	callq  10d0 <free@plt>
    1463:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
    1467:	e8 64 fc ff ff       	callq  10d0 <free@plt>
    146c:	48 8b 7d 28          	mov    0x28(%rbp),%rdi
    1470:	e8 5b fc ff ff       	callq  10d0 <free@plt>
    1475:	48 8d 7d 00          	lea    0x0(%rbp),%rdi
    1479:	e8 52 fc ff ff       	callq  10d0 <free@plt>
    147e:	48 8d 64 24 30       	lea    0x30(%rsp),%rsp
    1483:	31 c0                	xor    %eax,%eax
    1485:	5b                   	pop    %rbx
    1486:	5d                   	pop    %rbp
    1487:	41 5c                	pop    %r12
    1489:	41 5d                	pop    %r13
    148b:	41 5e                	pop    %r14
    148d:	c3                   	retq   
    148e:	66 90                	xchg   %ax,%ax

0000000000001490 <set_fast_math>:
    1490:	f3 0f 1e fa          	endbr64 
    1494:	0f ae 5c 24 fc       	stmxcsr -0x4(%rsp)
    1499:	81 4c 24 fc 40 80 00 	orl    $0x8040,-0x4(%rsp)
    14a0:	00 
    14a1:	0f ae 54 24 fc       	ldmxcsr -0x4(%rsp)
    14a6:	c3                   	retq   
    14a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    14ae:	00 00 

00000000000014b0 <_start>:
    14b0:	f3 0f 1e fa          	endbr64 
    14b4:	31 ed                	xor    %ebp,%ebp
    14b6:	49 89 d1             	mov    %rdx,%r9
    14b9:	5e                   	pop    %rsi
    14ba:	48 89 e2             	mov    %rsp,%rdx
    14bd:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    14c1:	50                   	push   %rax
    14c2:	54                   	push   %rsp
    14c3:	4c 8d 05 26 06 00 00 	lea    0x626(%rip),%r8        # 1af0 <__libc_csu_fini>
    14ca:	48 8d 0d af 05 00 00 	lea    0x5af(%rip),%rcx        # 1a80 <__libc_csu_init>
    14d1:	48 8d 3d 88 fc ff ff 	lea    -0x378(%rip),%rdi        # 1160 <main>
    14d8:	ff 15 02 2b 00 00    	callq  *0x2b02(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    14de:	f4                   	hlt    
    14df:	90                   	nop

00000000000014e0 <deregister_tm_clones>:
    14e0:	48 8d 3d 29 2b 00 00 	lea    0x2b29(%rip),%rdi        # 4010 <stdout@@GLIBC_2.2.5>
    14e7:	48 8d 05 22 2b 00 00 	lea    0x2b22(%rip),%rax        # 4010 <stdout@@GLIBC_2.2.5>
    14ee:	48 39 f8             	cmp    %rdi,%rax
    14f1:	74 15                	je     1508 <deregister_tm_clones+0x28>
    14f3:	48 8b 05 de 2a 00 00 	mov    0x2ade(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    14fa:	48 85 c0             	test   %rax,%rax
    14fd:	74 09                	je     1508 <deregister_tm_clones+0x28>
    14ff:	ff e0                	jmpq   *%rax
    1501:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1508:	c3                   	retq   
    1509:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001510 <register_tm_clones>:
    1510:	48 8d 3d f9 2a 00 00 	lea    0x2af9(%rip),%rdi        # 4010 <stdout@@GLIBC_2.2.5>
    1517:	48 8d 35 f2 2a 00 00 	lea    0x2af2(%rip),%rsi        # 4010 <stdout@@GLIBC_2.2.5>
    151e:	48 29 fe             	sub    %rdi,%rsi
    1521:	48 89 f0             	mov    %rsi,%rax
    1524:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1528:	48 c1 f8 03          	sar    $0x3,%rax
    152c:	48 01 c6             	add    %rax,%rsi
    152f:	48 d1 fe             	sar    %rsi
    1532:	74 14                	je     1548 <register_tm_clones+0x38>
    1534:	48 8b 05 b5 2a 00 00 	mov    0x2ab5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    153b:	48 85 c0             	test   %rax,%rax
    153e:	74 08                	je     1548 <register_tm_clones+0x38>
    1540:	ff e0                	jmpq   *%rax
    1542:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1548:	c3                   	retq   
    1549:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001550 <__do_global_dtors_aux>:
    1550:	f3 0f 1e fa          	endbr64 
    1554:	80 3d bd 2a 00 00 00 	cmpb   $0x0,0x2abd(%rip)        # 4018 <completed.8060>
    155b:	75 2b                	jne    1588 <__do_global_dtors_aux+0x38>
    155d:	55                   	push   %rbp
    155e:	48 83 3d 92 2a 00 00 	cmpq   $0x0,0x2a92(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1565:	00 
    1566:	48 89 e5             	mov    %rsp,%rbp
    1569:	74 0c                	je     1577 <__do_global_dtors_aux+0x27>
    156b:	48 8b 3d 96 2a 00 00 	mov    0x2a96(%rip),%rdi        # 4008 <__dso_handle>
    1572:	e8 49 fb ff ff       	callq  10c0 <__cxa_finalize@plt>
    1577:	e8 64 ff ff ff       	callq  14e0 <deregister_tm_clones>
    157c:	c6 05 95 2a 00 00 01 	movb   $0x1,0x2a95(%rip)        # 4018 <completed.8060>
    1583:	5d                   	pop    %rbp
    1584:	c3                   	retq   
    1585:	0f 1f 00             	nopl   (%rax)
    1588:	c3                   	retq   
    1589:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001590 <frame_dummy>:
    1590:	f3 0f 1e fa          	endbr64 
    1594:	e9 77 ff ff ff       	jmpq   1510 <register_tm_clones>
    1599:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000015a0 <init>:
    15a0:	f3 0f 1e fa          	endbr64 
    15a4:	48 85 f6             	test   %rsi,%rsi
    15a7:	0f 84 f3 00 00 00    	je     16a0 <init+0x100>
    15ad:	41 55                	push   %r13
    15af:	41 54                	push   %r12
    15b1:	4c 8d 26             	lea    (%rsi),%r12
    15b4:	55                   	push   %rbp
    15b5:	48 8d 2f             	lea    (%rdi),%rbp
    15b8:	53                   	push   %rbx
    15b9:	31 db                	xor    %ebx,%ebx
    15bb:	48 8d 64 24 e8       	lea    -0x18(%rsp),%rsp
    15c0:	e8 8b fb ff ff       	callq  1150 <rand@plt>
    15c5:	4c 63 e8             	movslq %eax,%r13
    15c8:	e8 83 fb ff ff       	callq  1150 <rand@plt>
    15cd:	c7 44 24 0c 00 00 00 	movl   $0x30000000,0xc(%rsp)
    15d4:	30 
    15d5:	48 98                	cltq   
    15d7:	49 39 c5             	cmp    %rax,%r13
    15da:	77 0e                	ja     15ea <init+0x4a>
    15dc:	c5 fa 10 15 40 0b 00 	vmovss 0xb40(%rip),%xmm2        # 2124 <_IO_stdin_used+0x124>
    15e3:	00 
    15e4:	c5 fa 11 54 24 0c    	vmovss %xmm2,0xc(%rsp)
    15ea:	e8 61 fb ff ff       	callq  1150 <rand@plt>
    15ef:	c5 fa 2a c0          	vcvtsi2ss %eax,%xmm0,%xmm0
    15f3:	48 8b 55 00          	mov    0x0(%rbp),%rdx
    15f7:	c5 fa 59 44 24 0c    	vmulss 0xc(%rsp),%xmm0,%xmm0
    15fd:	c5 fa 11 04 9a       	vmovss %xmm0,(%rdx,%rbx,4)
    1602:	e8 49 fb ff ff       	callq  1150 <rand@plt>
    1607:	c5 fa 2a c0          	vcvtsi2ss %eax,%xmm0,%xmm0
    160b:	48 8b 55 08          	mov    0x8(%rbp),%rdx
    160f:	c5 fa 59 05 09 0b 00 	vmulss 0xb09(%rip),%xmm0,%xmm0        # 2120 <_IO_stdin_used+0x120>
    1616:	00 
    1617:	c5 fa 11 04 9a       	vmovss %xmm0,(%rdx,%rbx,4)
    161c:	e8 2f fb ff ff       	callq  1150 <rand@plt>
    1621:	c5 fa 2a c0          	vcvtsi2ss %eax,%xmm0,%xmm0
    1625:	48 8b 55 10          	mov    0x10(%rbp),%rdx
    1629:	c5 fa 59 44 24 0c    	vmulss 0xc(%rsp),%xmm0,%xmm0
    162f:	c5 fa 11 04 9a       	vmovss %xmm0,(%rdx,%rbx,4)
    1634:	e8 17 fb ff ff       	callq  1150 <rand@plt>
    1639:	c5 fa 2a c0          	vcvtsi2ss %eax,%xmm0,%xmm0
    163d:	48 8b 55 18          	mov    0x18(%rbp),%rdx
    1641:	c5 fa 59 05 d7 0a 00 	vmulss 0xad7(%rip),%xmm0,%xmm0        # 2120 <_IO_stdin_used+0x120>
    1648:	00 
    1649:	c5 fa 11 04 9a       	vmovss %xmm0,(%rdx,%rbx,4)
    164e:	e8 fd fa ff ff       	callq  1150 <rand@plt>
    1653:	c5 fa 2a c0          	vcvtsi2ss %eax,%xmm0,%xmm0
    1657:	48 8b 55 20          	mov    0x20(%rbp),%rdx
    165b:	c5 fa 59 44 24 0c    	vmulss 0xc(%rsp),%xmm0,%xmm0
    1661:	c5 fa 11 04 9a       	vmovss %xmm0,(%rdx,%rbx,4)
    1666:	e8 e5 fa ff ff       	callq  1150 <rand@plt>
    166b:	c5 fa 2a c0          	vcvtsi2ss %eax,%xmm0,%xmm0
    166f:	48 8b 55 28          	mov    0x28(%rbp),%rdx
    1673:	c5 fa 59 05 a5 0a 00 	vmulss 0xaa5(%rip),%xmm0,%xmm0        # 2120 <_IO_stdin_used+0x120>
    167a:	00 
    167b:	c5 fa 11 04 9a       	vmovss %xmm0,(%rdx,%rbx,4)
    1680:	48 8d 5b 01          	lea    0x1(%rbx),%rbx
    1684:	49 39 dc             	cmp    %rbx,%r12
    1687:	0f 85 33 ff ff ff    	jne    15c0 <init+0x20>
    168d:	48 8d 64 24 18       	lea    0x18(%rsp),%rsp
    1692:	5b                   	pop    %rbx
    1693:	5d                   	pop    %rbp
    1694:	41 5c                	pop    %r12
    1696:	41 5d                	pop    %r13
    1698:	c3                   	retq   
    1699:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    16a0:	c3                   	retq   
    16a1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    16a8:	00 00 00 00 
    16ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000016b0 <move_particles>:
    16b0:	f3 0f 1e fa          	endbr64 
    16b4:	48 85 f6             	test   %rsi,%rsi
    16b7:	0f 84 b5 03 00 00    	je     1a72 <move_particles+0x3c2>
    16bd:	55                   	push   %rbp
    16be:	62 a1 7d 40 ef c0    	vpxord %zmm16,%zmm16,%zmm16
    16c4:	48 89 e5             	mov    %rsp,%rbp
    16c7:	41 57                	push   %r15
    16c9:	41 56                	push   %r14
    16cb:	41 55                	push   %r13
    16cd:	41 54                	push   %r12
    16cf:	53                   	push   %rbx
    16d0:	48 8b 0f             	mov    (%rdi),%rcx
    16d3:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    16d7:	48 8b 47 18          	mov    0x18(%rdi),%rax
    16db:	4c 8b 47 08          	mov    0x8(%rdi),%r8
    16df:	4c 8b 4f 10          	mov    0x10(%rdi),%r9
    16e3:	4c 8d 11             	lea    (%rcx),%r10
    16e6:	49 c1 ea 02          	shr    $0x2,%r10
    16ea:	48 89 44 24 f8       	mov    %rax,-0x8(%rsp)
    16ef:	49 f7 da             	neg    %r10
    16f2:	41 83 e2 0f          	and    $0xf,%r10d
    16f6:	48 8d 46 ff          	lea    -0x1(%rsi),%rax
    16fa:	4c 89 d3             	mov    %r10,%rbx
    16fd:	4e 8d 1c 95 00 00 00 	lea    0x0(,%r10,4),%r11
    1704:	00 
    1705:	48 83 c3 0f          	add    $0xf,%rbx
    1709:	4e 8d 2c 19          	lea    (%rcx,%r11,1),%r13
    170d:	48 83 fb 17          	cmp    $0x17,%rbx
    1711:	4f 8d 24 18          	lea    (%r8,%r11,1),%r12
    1715:	48 89 44 24 e8       	mov    %rax,-0x18(%rsp)
    171a:	b8 17 00 00 00       	mov    $0x17,%eax
    171f:	48 0f 43 c3          	cmovae %rbx,%rax
    1723:	4f 8d 1c 0b          	lea    (%r11,%r9,1),%r11
    1727:	c5 7a 10 35 f9 09 00 	vmovss 0x9f9(%rip),%xmm14        # 2128 <_IO_stdin_used+0x128>
    172e:	00 
    172f:	48 89 44 24 f0       	mov    %rax,-0x10(%rsp)
    1734:	48 8d 06             	lea    (%rsi),%rax
    1737:	4c 29 d0             	sub    %r10,%rax
    173a:	c4 41 0a 10 e6       	vmovss %xmm14,%xmm14,%xmm12
    173f:	48 89 44 24 d8       	mov    %rax,-0x28(%rsp)
    1744:	48 89 c3             	mov    %rax,%rbx
    1747:	48 c1 eb 04          	shr    $0x4,%rbx
    174b:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
    174f:	c5 7a 10 2d d5 09 00 	vmovss 0x9d5(%rip),%xmm13        # 212c <_IO_stdin_used+0x12c>
    1756:	00 
    1757:	4c 8b 77 20          	mov    0x20(%rdi),%r14
    175b:	c4 41 12 10 dd       	vmovss %xmm13,%xmm13,%xmm11
    1760:	4c 8b 7f 28          	mov    0x28(%rdi),%r15
    1764:	31 ff                	xor    %edi,%edi
    1766:	48 c1 e3 06          	shl    $0x6,%rbx
    176a:	48 89 44 24 e0       	mov    %rax,-0x20(%rsp)
    176f:	62 71 7c 48 28 3d c7 	vmovaps 0x9c7(%rip),%zmm15        # 2140 <_IO_stdin_used+0x140>
    1776:	09 00 00 
    1779:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1780:	48 8b 54 24 e8       	mov    -0x18(%rsp),%rdx
    1785:	31 c0                	xor    %eax,%eax
    1787:	c5 fa 10 2c b9       	vmovss (%rcx,%rdi,4),%xmm5
    178c:	62 b1 7c 48 28 f0    	vmovaps %zmm16,%zmm6
    1792:	c4 c1 7a 10 24 b8    	vmovss (%r8,%rdi,4),%xmm4
    1798:	62 b1 7c 48 28 f8    	vmovaps %zmm16,%zmm7
    179e:	48 39 54 24 f0       	cmp    %rdx,-0x10(%rsp)
    17a3:	62 a1 7c 48 28 c8    	vmovaps %zmm16,%zmm17
    17a9:	c4 c1 7a 10 1c b9    	vmovss (%r9,%rdi,4),%xmm3
    17af:	0f 87 bb 01 00 00    	ja     1970 <move_particles+0x2c0>
    17b5:	4d 85 d2             	test   %r10,%r10
    17b8:	74 62                	je     181c <move_particles+0x16c>
    17ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    17c0:	c4 41 7a 10 0c 80    	vmovss (%r8,%rax,4),%xmm9
    17c6:	c5 32 5c cc          	vsubss %xmm4,%xmm9,%xmm9
    17ca:	c4 41 7a 10 04 81    	vmovss (%r9,%rax,4),%xmm8
    17d0:	c5 3a 5c c3          	vsubss %xmm3,%xmm8,%xmm8
    17d4:	c5 7a 10 14 81       	vmovss (%rcx,%rax,4),%xmm10
    17d9:	c5 2a 5c d5          	vsubss %xmm5,%xmm10,%xmm10
    17dd:	48 8d 40 01          	lea    0x1(%rax),%rax
    17e1:	c4 c1 32 59 c9       	vmulss %xmm9,%xmm9,%xmm1
    17e6:	4c 39 d0             	cmp    %r10,%rax
    17e9:	c5 3a 11 c2          	vmovss %xmm8,%xmm8,%xmm2
    17ed:	c4 c2 09 99 d0       	vfmadd132ss %xmm8,%xmm14,%xmm2
    17f2:	c4 c2 29 b9 ca       	vfmadd231ss %xmm10,%xmm10,%xmm1
    17f7:	c5 f2 58 d2          	vaddss %xmm2,%xmm1,%xmm2
    17fb:	c5 ea 51 ca          	vsqrtss %xmm2,%xmm2,%xmm1
    17ff:	c5 f2 59 ca          	vmulss %xmm2,%xmm1,%xmm1
    1803:	c5 92 5e c9          	vdivss %xmm1,%xmm13,%xmm1
    1807:	62 c2 75 08 b9 ca    	vfmadd231ss %xmm10,%xmm1,%xmm17
    180d:	c4 c2 71 b9 f9       	vfmadd231ss %xmm9,%xmm1,%xmm7
    1812:	c4 c2 71 b9 f0       	vfmadd231ss %xmm8,%xmm1,%xmm6
    1817:	75 a7                	jne    17c0 <move_particles+0x110>
    1819:	49 8d 02             	lea    (%r10),%rax
    181c:	c4 41 28 57 d2       	vxorps %xmm10,%xmm10,%xmm10
    1821:	62 e2 7d 48 18 fd    	vbroadcastss %xmm5,%zmm23
    1827:	62 e2 7d 48 18 f4    	vbroadcastss %xmm4,%zmm22
    182d:	62 e2 7d 48 18 eb    	vbroadcastss %xmm3,%zmm21
    1833:	31 d2                	xor    %edx,%edx
    1835:	62 51 7c 48 28 ca    	vmovaps %zmm10,%zmm9
    183b:	62 51 7c 48 28 c2    	vmovaps %zmm10,%zmm8
    1841:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    1848:	00 00 00 00 
    184c:	0f 1f 40 00          	nopl   0x0(%rax)
    1850:	62 d1 7c 48 28 54 15 	vmovaps 0x0(%r13,%rdx,1),%zmm2
    1857:	00 
    1858:	62 a1 6c 48 5c e7    	vsubps %zmm23,%zmm2,%zmm20
    185e:	62 d1 7c 48 10 14 14 	vmovups (%r12,%rdx,1),%zmm2
    1865:	62 a1 6c 48 5c de    	vsubps %zmm22,%zmm2,%zmm19
    186b:	62 d1 7c 48 10 14 13 	vmovups (%r11,%rdx,1),%zmm2
    1872:	62 a1 6c 48 5c d5    	vsubps %zmm21,%zmm2,%zmm18
    1878:	48 8d 52 40          	lea    0x40(%rdx),%rdx
    187c:	48 39 da             	cmp    %rbx,%rdx
    187f:	62 b1 64 40 59 cb    	vmulps %zmm19,%zmm19,%zmm1
    1885:	62 b2 5d 40 b8 cc    	vfmadd231ps %zmm20,%zmm20,%zmm1
    188b:	62 d1 74 48 58 cf    	vaddps %zmm15,%zmm1,%zmm1
    1891:	62 f1 7c 48 28 d1    	vmovaps %zmm1,%zmm2
    1897:	62 b2 6d 40 b8 d2    	vfmadd231ps %zmm18,%zmm18,%zmm2
    189d:	62 f2 7d 48 cc ca    	vrsqrt28ps %zmm2,%zmm1
    18a3:	62 f2 7d 48 ca c9    	vrcp28ps %zmm1,%zmm1
    18a9:	62 f1 74 48 59 ca    	vmulps %zmm2,%zmm1,%zmm1
    18af:	62 f2 7d 48 ca c9    	vrcp28ps %zmm1,%zmm1
    18b5:	62 72 5d 40 b8 c1    	vfmadd231ps %zmm1,%zmm20,%zmm8
    18bb:	62 32 75 48 b8 cb    	vfmadd231ps %zmm19,%zmm1,%zmm9
    18c1:	62 32 75 48 b8 d2    	vfmadd231ps %zmm18,%zmm1,%zmm10
    18c7:	75 87                	jne    1850 <move_particles+0x1a0>
    18c9:	62 73 fd 48 3b d1 01 	vextracti64x4 $0x1,%zmm10,%ymm1
    18d0:	c4 41 74 58 d2       	vaddps %ymm10,%ymm1,%ymm10
    18d5:	48 8b 54 24 e0       	mov    -0x20(%rsp),%rdx
    18da:	c4 63 7d 19 d1 01    	vextractf128 $0x1,%ymm10,%xmm1
    18e0:	48 01 d0             	add    %rdx,%rax
    18e3:	c4 41 70 58 d2       	vaddps %xmm10,%xmm1,%xmm10
    18e8:	48 3b 54 24 d8       	cmp    -0x28(%rsp),%rdx
    18ed:	c4 c1 28 12 ca       	vmovhlps %xmm10,%xmm10,%xmm1
    18f2:	c4 41 70 58 d2       	vaddps %xmm10,%xmm1,%xmm10
    18f7:	c4 c1 28 c6 ca 55    	vshufps $0x55,%xmm10,%xmm10,%xmm1
    18fd:	c4 c1 70 58 ca       	vaddps %xmm10,%xmm1,%xmm1
    1902:	c5 ca 58 f1          	vaddss %xmm1,%xmm6,%xmm6
    1906:	62 73 fd 48 3b c9 01 	vextracti64x4 $0x1,%zmm9,%ymm1
    190d:	c4 c1 74 58 c9       	vaddps %ymm9,%ymm1,%ymm1
    1912:	c4 c3 7d 19 c9 01    	vextractf128 $0x1,%ymm1,%xmm9
    1918:	c5 30 58 c9          	vaddps %xmm1,%xmm9,%xmm9
    191c:	c4 c1 30 12 c9       	vmovhlps %xmm9,%xmm9,%xmm1
    1921:	c4 41 70 58 c9       	vaddps %xmm9,%xmm1,%xmm9
    1926:	c4 c1 30 c6 c9 55    	vshufps $0x55,%xmm9,%xmm9,%xmm1
    192c:	c4 c1 70 58 c9       	vaddps %xmm9,%xmm1,%xmm1
    1931:	c5 f2 58 ff          	vaddss %xmm7,%xmm1,%xmm7
    1935:	62 73 fd 48 3b c1 01 	vextracti64x4 $0x1,%zmm8,%ymm1
    193c:	c4 c1 74 58 c8       	vaddps %ymm8,%ymm1,%ymm1
    1941:	c4 c3 7d 19 c8 01    	vextractf128 $0x1,%ymm1,%xmm8
    1947:	c5 38 58 c1          	vaddps %xmm1,%xmm8,%xmm8
    194b:	c4 c1 38 12 c8       	vmovhlps %xmm8,%xmm8,%xmm1
    1950:	c4 41 70 58 c0       	vaddps %xmm8,%xmm1,%xmm8
    1955:	c4 c1 38 c6 c8 55    	vshufps $0x55,%xmm8,%xmm8,%xmm1
    195b:	c4 c1 70 58 c8       	vaddps %xmm8,%xmm1,%xmm1
    1960:	62 a1 76 08 58 c9    	vaddss %xmm17,%xmm1,%xmm17
    1966:	74 66                	je     19ce <move_particles+0x31e>
    1968:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    196f:	00 
    1970:	c4 41 7a 10 0c 80    	vmovss (%r8,%rax,4),%xmm9
    1976:	c5 32 5c cc          	vsubss %xmm4,%xmm9,%xmm9
    197a:	c4 41 7a 10 04 81    	vmovss (%r9,%rax,4),%xmm8
    1980:	c5 3a 5c c3          	vsubss %xmm3,%xmm8,%xmm8
    1984:	62 e1 7e 08 10 14 81 	vmovss (%rcx,%rax,4),%xmm18
    198b:	62 e1 6e 00 5c d5    	vsubss %xmm5,%xmm18,%xmm18
    1991:	48 8d 40 01          	lea    0x1(%rax),%rax
    1995:	c4 c1 32 59 c9       	vmulss %xmm9,%xmm9,%xmm1
    199a:	48 39 c6             	cmp    %rax,%rsi
    199d:	c5 3a 11 c2          	vmovss %xmm8,%xmm8,%xmm2
    19a1:	c4 c2 19 99 d0       	vfmadd132ss %xmm8,%xmm12,%xmm2
    19a6:	62 b2 6d 00 b9 ca    	vfmadd231ss %xmm18,%xmm18,%xmm1
    19ac:	c5 f2 58 d2          	vaddss %xmm2,%xmm1,%xmm2
    19b0:	c5 ea 51 ca          	vsqrtss %xmm2,%xmm2,%xmm1
    19b4:	c5 f2 59 ca          	vmulss %xmm2,%xmm1,%xmm1
    19b8:	c5 a2 5e c9          	vdivss %xmm1,%xmm11,%xmm1
    19bc:	62 e2 6d 00 b9 c9    	vfmadd231ss %xmm1,%xmm18,%xmm17
    19c2:	c4 e2 31 b9 f9       	vfmadd231ss %xmm1,%xmm9,%xmm7
    19c7:	c4 e2 39 b9 f1       	vfmadd231ss %xmm1,%xmm8,%xmm6
    19cc:	77 a2                	ja     1970 <move_particles+0x2c0>
    19ce:	48 8b 44 24 f8       	mov    -0x8(%rsp),%rax
    19d3:	62 e2 7d 08 a9 0c b8 	vfmadd213ss (%rax,%rdi,4),%xmm0,%xmm17
    19da:	62 e1 7e 08 11 0c b8 	vmovss %xmm17,(%rax,%rdi,4)
    19e1:	48 8d 47 01          	lea    0x1(%rdi),%rax
    19e5:	c4 c2 79 a9 3c be    	vfmadd213ss (%r14,%rdi,4),%xmm0,%xmm7
    19eb:	c4 c1 7a 11 3c be    	vmovss %xmm7,(%r14,%rdi,4)
    19f1:	48 39 c6             	cmp    %rax,%rsi
    19f4:	c4 c2 79 a9 34 bf    	vfmadd213ss (%r15,%rdi,4),%xmm0,%xmm6
    19fa:	c4 c1 7a 11 34 bf    	vmovss %xmm6,(%r15,%rdi,4)
    1a00:	74 0e                	je     1a10 <move_particles+0x360>
    1a02:	48 8d 38             	lea    (%rax),%rdi
    1a05:	e9 76 fd ff ff       	jmpq   1780 <move_particles+0xd0>
    1a0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1a10:	48 8b 74 24 f8       	mov    -0x8(%rsp),%rsi
    1a15:	31 c0                	xor    %eax,%eax
    1a17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    1a1e:	00 00 
    1a20:	c5 fa 10 0c 86       	vmovss (%rsi,%rax,4),%xmm1
    1a25:	48 8d 10             	lea    (%rax),%rdx
    1a28:	c4 e2 79 a9 0c 81    	vfmadd213ss (%rcx,%rax,4),%xmm0,%xmm1
    1a2e:	c5 fa 11 0c 81       	vmovss %xmm1,(%rcx,%rax,4)
    1a33:	c4 c1 7a 10 0c 86    	vmovss (%r14,%rax,4),%xmm1
    1a39:	48 39 fa             	cmp    %rdi,%rdx
    1a3c:	c4 c2 79 a9 0c 80    	vfmadd213ss (%r8,%rax,4),%xmm0,%xmm1
    1a42:	c4 c1 7a 11 0c 80    	vmovss %xmm1,(%r8,%rax,4)
    1a48:	c4 c1 7a 10 0c 87    	vmovss (%r15,%rax,4),%xmm1
    1a4e:	c4 c2 79 a9 0c 81    	vfmadd213ss (%r9,%rax,4),%xmm0,%xmm1
    1a54:	c4 c1 7a 11 0c 81    	vmovss %xmm1,(%r9,%rax,4)
    1a5a:	48 8d 40 01          	lea    0x1(%rax),%rax
    1a5e:	75 c0                	jne    1a20 <move_particles+0x370>
    1a60:	c5 f8 77             	vzeroupper 
    1a63:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    1a67:	5b                   	pop    %rbx
    1a68:	41 5c                	pop    %r12
    1a6a:	41 5d                	pop    %r13
    1a6c:	41 5e                	pop    %r14
    1a6e:	41 5f                	pop    %r15
    1a70:	5d                   	pop    %rbp
    1a71:	c3                   	retq   
    1a72:	c3                   	retq   
    1a73:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1a7a:	00 00 00 
    1a7d:	0f 1f 00             	nopl   (%rax)

0000000000001a80 <__libc_csu_init>:
    1a80:	f3 0f 1e fa          	endbr64 
    1a84:	41 57                	push   %r15
    1a86:	4c 8d 3d d3 22 00 00 	lea    0x22d3(%rip),%r15        # 3d60 <__frame_dummy_init_array_entry>
    1a8d:	41 56                	push   %r14
    1a8f:	49 89 d6             	mov    %rdx,%r14
    1a92:	41 55                	push   %r13
    1a94:	49 89 f5             	mov    %rsi,%r13
    1a97:	41 54                	push   %r12
    1a99:	41 89 fc             	mov    %edi,%r12d
    1a9c:	55                   	push   %rbp
    1a9d:	48 8d 2d cc 22 00 00 	lea    0x22cc(%rip),%rbp        # 3d70 <__do_global_dtors_aux_fini_array_entry>
    1aa4:	53                   	push   %rbx
    1aa5:	4c 29 fd             	sub    %r15,%rbp
    1aa8:	48 83 ec 08          	sub    $0x8,%rsp
    1aac:	e8 4f f5 ff ff       	callq  1000 <_init>
    1ab1:	48 c1 fd 03          	sar    $0x3,%rbp
    1ab5:	74 1f                	je     1ad6 <__libc_csu_init+0x56>
    1ab7:	31 db                	xor    %ebx,%ebx
    1ab9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1ac0:	4c 89 f2             	mov    %r14,%rdx
    1ac3:	4c 89 ee             	mov    %r13,%rsi
    1ac6:	44 89 e7             	mov    %r12d,%edi
    1ac9:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    1acd:	48 83 c3 01          	add    $0x1,%rbx
    1ad1:	48 39 dd             	cmp    %rbx,%rbp
    1ad4:	75 ea                	jne    1ac0 <__libc_csu_init+0x40>
    1ad6:	48 83 c4 08          	add    $0x8,%rsp
    1ada:	5b                   	pop    %rbx
    1adb:	5d                   	pop    %rbp
    1adc:	41 5c                	pop    %r12
    1ade:	41 5d                	pop    %r13
    1ae0:	41 5e                	pop    %r14
    1ae2:	41 5f                	pop    %r15
    1ae4:	c3                   	retq   
    1ae5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    1aec:	00 00 00 00 

0000000000001af0 <__libc_csu_fini>:
    1af0:	f3 0f 1e fa          	endbr64 
    1af4:	c3                   	retq   

Déassemblage de la section .fini :

0000000000001af8 <_fini>:
    1af8:	f3 0f 1e fa          	endbr64 
    1afc:	48 83 ec 08          	sub    $0x8,%rsp
    1b00:	48 83 c4 08          	add    $0x8,%rsp
    1b04:	c3                   	retq   

Déassemblage de la section .rodata :

0000000000002000 <_IO_stdin_used>:
    2000:	01 00                	add    %eax,(%rax)
    2002:	02 00                	add    (%rax),%al
    2004:	00 00                	add    %al,(%rax)
    2006:	00 00                	add    %al,(%rax)
    2008:	0a 1b                	or     (%rbx),%bl
    200a:	5b                   	pop    %rbx
    200b:	31 6d 54             	xor    %ebp,0x54(%rbp)
    200e:	6f                   	outsl  %ds:(%rsi),(%dx)
    200f:	74 61                	je     2072 <_IO_stdin_used+0x72>
    2011:	6c                   	insb   (%dx),%es:(%rdi)
    2012:	20 6d 65             	and    %ch,0x65(%rbp)
    2015:	6d                   	insl   (%dx),%es:(%rdi)
    2016:	6f                   	outsl  %ds:(%rsi),(%dx)
    2017:	72 79                	jb     2092 <_IO_stdin_used+0x92>
    2019:	20 73 69             	and    %dh,0x69(%rbx)
    201c:	7a 65                	jp     2083 <_IO_stdin_used+0x83>
    201e:	3a 1b                	cmp    (%rbx),%bl
    2020:	5b                   	pop    %rbx
    2021:	30 6d 20             	xor    %ch,0x20(%rbp)
    2024:	25 6c 6c 75 20       	and    $0x20756c6c,%eax
    2029:	42 2c 20             	rex.X sub $0x20,%al
    202c:	25 6c 6c 75 20       	and    $0x20756c6c,%eax
    2031:	4b 69 42 2c 20 25 6c 	rex.WXB imul $0x6c6c2520,0x2c(%r10),%rax
    2038:	6c 
    2039:	75 20                	jne    205b <_IO_stdin_used+0x5b>
    203b:	4d 69 42 0a 0a 00 00 	imul   $0xa,0xa(%r10),%r8
    2042:	00 
    2043:	00 00                	add    %al,(%rax)
    2045:	00 00                	add    %al,(%rax)
    2047:	00 2d 2d 2d 2d 2d    	add    %ch,0x2d2d2d2d(%rip)        # 2d2d4d7a <_end+0x2d2d0d5a>
    204d:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    2052:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    2057:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    205c:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    2061:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    2066:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    206b:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    2070:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    2075:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    207a:	2d 2d 2d 00 00       	sub    $0x2d2d,%eax
    207f:	00 1b                	add    %bl,(%rbx)
    2081:	5b                   	pop    %rbx
    2082:	31 6d 25             	xor    %ebp,0x25(%rbp)
    2085:	73 20                	jae    20a7 <_IO_stdin_used+0xa7>
    2087:	25 34 73 20 1b       	and    $0x1b207334,%eax
    208c:	5b                   	pop    %rbx
    208d:	34 32                	xor    $0x32,%al
    208f:	6d                   	insl   (%dx),%es:(%rdi)
    2090:	25 31 30 2e 31       	and    $0x312e3031,%eax
    2095:	6c                   	insb   (%dx),%es:(%rdi)
    2096:	66 20 2b             	data16 and %ch,(%rbx)
    2099:	2d 20 25 2e 31       	sub    $0x312e2520,%eax
    209e:	6c                   	insb   (%dx),%es:(%rdi)
    209f:	66 20 47 46          	data16 and %al,0x46(%rdi)
    20a3:	4c                   	rex.WR
    20a4:	4f 50                	rex.WRXB push %r8
    20a6:	2f                   	(bad)  
    20a7:	73 1b                	jae    20c4 <_IO_stdin_used+0xc4>
    20a9:	5b                   	pop    %rbx
    20aa:	30 6d 0a             	xor    %ch,0xa(%rbp)
    20ad:	00 47 46             	add    %al,0x46(%rdi)
    20b0:	4c                   	rex.WR
    20b1:	4f 50                	rex.WRXB push %r8
    20b3:	2f                   	(bad)  
    20b4:	73 00                	jae    20b6 <_IO_stdin_used+0xb6>
    20b6:	49 6e                	rex.WB outsb %ds:(%rsi),(%dx)
    20b8:	74 65                	je     211f <_IO_stdin_used+0x11f>
    20ba:	72 61                	jb     211d <_IO_stdin_used+0x11d>
    20bc:	63 74 2f 73          	movslq 0x73(%rdi,%rbp,1),%esi
    20c0:	00 54 69 6d          	add    %dl,0x6d(%rcx,%rbp,2)
    20c4:	65 2c 20             	gs sub $0x20,%al
    20c7:	73 00                	jae    20c9 <_IO_stdin_used+0xc9>
    20c9:	53                   	push   %rbx
    20ca:	74 65                	je     2131 <_IO_stdin_used+0x131>
    20cc:	70 00                	jo     20ce <_IO_stdin_used+0xce>
    20ce:	1b 5b 31             	sbb    0x31(%rbx),%ebx
    20d1:	6d                   	insl   (%dx),%es:(%rdi)
    20d2:	25 35 73 20 25       	and    $0x25207335,%eax
    20d7:	31 30                	xor    %esi,(%rax)
    20d9:	73 20                	jae    20fb <_IO_stdin_used+0xfb>
    20db:	25 31 30 73 20       	and    $0x20733031,%eax
    20e0:	25 38 73 1b 5b       	and    $0x5b1b7338,%eax
    20e5:	30 6d 0a             	xor    %ch,0xa(%rbp)
    20e8:	00 25 35 6c 6c 75    	add    %ah,0x756c6c35(%rip)        # 756c8d23 <_end+0x756c4d03>
    20ee:	20 25 31 30 2e 33    	and    %ah,0x332e3031(%rip)        # 332e5125 <_end+0x332e1105>
    20f4:	65 20 25 31 30 2e 33 	and    %ah,%gs:0x332e3031(%rip)        # 332e512c <_end+0x332e110c>
    20fb:	65 20 25 38 2e 31 66 	and    %ah,%gs:0x66312e38(%rip)        # 66314f3a <_end+0x66310f1a>
    2102:	20 25 73 0a 00 41    	and    %ah,0x41000a73(%rip)        # 41002b7b <_end+0x40ffeb5b>
    2108:	76 65                	jbe    216f <_IO_stdin_used+0x16f>
    210a:	72 61                	jb     216d <_IO_stdin_used+0x16d>
    210c:	67 65 20 70 65       	and    %dh,%gs:0x65(%eax)
    2111:	72 66                	jb     2179 <_IO_stdin_used+0x179>
    2113:	6f                   	outsl  %ds:(%rsi),(%dx)
    2114:	72 6d                	jb     2183 <_IO_stdin_used+0x183>
    2116:	61                   	(bad)  
    2117:	6e                   	outsb  %ds:(%rsi),(%dx)
    2118:	63 65 3a             	movslq 0x3a(%rbp),%esp
    211b:	00 2a                	add    %ch,(%rdx)
    211d:	00 00                	add    %al,(%rax)
    211f:	00 00                	add    %al,(%rax)
    2121:	00 00                	add    %al,(%rax)
    2123:	30 00                	xor    %al,(%rax)
    2125:	00 00                	add    %al,(%rax)
    2127:	b0 08                	mov    $0x8,%al
    2129:	e5 3c                	in     $0x3c,%eax
    212b:	1e                   	(bad)  
    212c:	00 00                	add    %al,(%rax)
    212e:	80 3f 0a             	cmpb   $0xa,(%rdi)
    2131:	d7                   	xlat   %ds:(%rbx)
    2132:	23 3c 00             	and    (%rax,%rax,1),%edi
	...
    213d:	00 00                	add    %al,(%rax)
    213f:	00 08                	add    %cl,(%rax)
    2141:	e5 3c                	in     $0x3c,%eax
    2143:	1e                   	(bad)  
    2144:	08 e5                	or     %ah,%ch
    2146:	3c 1e                	cmp    $0x1e,%al
    2148:	08 e5                	or     %ah,%ch
    214a:	3c 1e                	cmp    $0x1e,%al
    214c:	08 e5                	or     %ah,%ch
    214e:	3c 1e                	cmp    $0x1e,%al
    2150:	08 e5                	or     %ah,%ch
    2152:	3c 1e                	cmp    $0x1e,%al
    2154:	08 e5                	or     %ah,%ch
    2156:	3c 1e                	cmp    $0x1e,%al
    2158:	08 e5                	or     %ah,%ch
    215a:	3c 1e                	cmp    $0x1e,%al
    215c:	08 e5                	or     %ah,%ch
    215e:	3c 1e                	cmp    $0x1e,%al
    2160:	08 e5                	or     %ah,%ch
    2162:	3c 1e                	cmp    $0x1e,%al
    2164:	08 e5                	or     %ah,%ch
    2166:	3c 1e                	cmp    $0x1e,%al
    2168:	08 e5                	or     %ah,%ch
    216a:	3c 1e                	cmp    $0x1e,%al
    216c:	08 e5                	or     %ah,%ch
    216e:	3c 1e                	cmp    $0x1e,%al
    2170:	08 e5                	or     %ah,%ch
    2172:	3c 1e                	cmp    $0x1e,%al
    2174:	08 e5                	or     %ah,%ch
    2176:	3c 1e                	cmp    $0x1e,%al
    2178:	08 e5                	or     %ah,%ch
    217a:	3c 1e                	cmp    $0x1e,%al
    217c:	08 e5                	or     %ah,%ch
    217e:	3c 1e                	cmp    $0x1e,%al
    2180:	00 00                	add    %al,(%rax)
    2182:	00 00                	add    %al,(%rax)
    2184:	00 00                	add    %al,(%rax)
    2186:	08 40 00             	or     %al,0x0(%rax)
    2189:	00 00                	add    %al,(%rax)
    218b:	00 00                	add    %al,(%rax)
    218d:	00 37                	add    %dh,(%rdi)
    218f:	40 95                	rex xchg %eax,%ebp
    2191:	d6                   	(bad)  
    2192:	26 e8 0b 2e 11 3e    	es callq 3e114fa3 <_end+0x3e110f83>
    2198:	00 00                	add    %al,(%rax)
    219a:	00 00                	add    %al,(%rax)
    219c:	00 00                	add    %al,(%rax)
    219e:	f0 3f                	lock (bad) 
    21a0:	92                   	xchg   %eax,%edx
    21a1:	24 49                	and    $0x49,%al
    21a3:	92                   	xchg   %eax,%edx
    21a4:	24 49                	and    $0x49,%al
    21a6:	c2                   	.byte 0xc2
    21a7:	3f                   	(bad)  

Déassemblage de la section .eh_frame_hdr :

00000000000021a8 <__offload_func_table>:
    21a8:	01 1b                	add    %ebx,(%rbx)
    21aa:	03 3b                	add    (%rbx),%edi
    21ac:	5c                   	pop    %rsp
    21ad:	00 00                	add    %al,(%rax)
    21af:	00 0a                	add    %cl,(%rdx)
    21b1:	00 00                	add    %al,(%rax)
    21b3:	00 78 ee             	add    %bh,-0x12(%rax)
    21b6:	ff                   	(bad)  
    21b7:	ff 90 00 00 00 18    	callq  *0x18000000(%rax)
    21bd:	ef                   	out    %eax,(%dx)
    21be:	ff                   	(bad)  
    21bf:	ff                   	(bad)  
    21c0:	b8 00 00 00 28       	mov    $0x28000000,%eax
    21c5:	ef                   	out    %eax,(%dx)
    21c6:	ff                   	(bad)  
    21c7:	ff d0                	callq  *%rax
    21c9:	00 00                	add    %al,(%rax)
    21cb:	00 b8 ef ff ff 5c    	add    %bh,0x5cffffef(%rax)
    21d1:	01 00                	add    %eax,(%rax)
    21d3:	00 e8                	add    %ch,%al
    21d5:	f2 ff                	repnz (bad) 
    21d7:	ff 00                	incl   (%rax)
    21d9:	02 00                	add    (%rax),%al
    21db:	00 08                	add    %cl,(%rax)
    21dd:	f3 ff                	repz (bad) 
    21df:	ff                   	(bad)  
    21e0:	78 00                	js     21e2 <__offload_func_table+0x3a>
    21e2:	00 00                	add    %al,(%rax)
    21e4:	f8                   	clc    
    21e5:	f3 ff                	repz (bad) 
    21e7:	ff                   	(bad)  
    21e8:	e8 00 00 00 08       	callq  80021ed <_end+0x7ffe1cd>
    21ed:	f5                   	cmc    
    21ee:	ff                   	(bad)  
    21ef:	ff 28                	ljmp   *(%rax)
    21f1:	01 00                	add    %eax,(%rax)
    21f3:	00 d8                	add    %bl,%al
    21f5:	f8                   	clc    
    21f6:	ff                   	(bad)  
    21f7:	ff a0 01 00 00 48    	jmpq   *0x48000001(%rax)
    21fd:	f9                   	stc    
    21fe:	ff                   	(bad)  
    21ff:	ff                   	(bad)  
    2200:	e8                   	.byte 0xe8
    2201:	01 00                	add    %eax,(%rax)
	...

Déassemblage de la section .eh_frame :

0000000000002208 <__FRAME_END__-0x1b4>:
    2208:	14 00                	adc    $0x0,%al
    220a:	00 00                	add    %al,(%rax)
    220c:	00 00                	add    %al,(%rax)
    220e:	00 00                	add    %al,(%rax)
    2210:	01 7a 52             	add    %edi,0x52(%rdx)
    2213:	00 01                	add    %al,(%rcx)
    2215:	78 10                	js     2227 <__offload_func_table+0x7f>
    2217:	01 1b                	add    %ebx,(%rbx)
    2219:	0c 07                	or     $0x7,%al
    221b:	08 90 01 00 00 14    	or     %dl,0x14000001(%rax)
    2221:	00 00                	add    %al,(%rax)
    2223:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2226:	00 00                	add    %al,(%rax)
    2228:	88 f2                	mov    %dh,%dl
    222a:	ff                   	(bad)  
    222b:	ff 2f                	ljmp   *(%rdi)
    222d:	00 00                	add    %al,(%rax)
    222f:	00 00                	add    %al,(%rax)
    2231:	44 07                	rex.R (bad) 
    2233:	10 00                	adc    %al,(%rax)
    2235:	00 00                	add    %al,(%rax)
    2237:	00 24 00             	add    %ah,(%rax,%rax,1)
    223a:	00 00                	add    %al,(%rax)
    223c:	34 00                	xor    $0x0,%al
    223e:	00 00                	add    %al,(%rax)
    2240:	e0 ed                	loopne 222f <__offload_func_table+0x87>
    2242:	ff                   	(bad)  
    2243:	ff a0 00 00 00 00    	jmpq   *0x0(%rax)
    2249:	0e                   	(bad)  
    224a:	10 46 0e             	adc    %al,0xe(%rsi)
    224d:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    2250:	0b 77 08             	or     0x8(%rdi),%esi
    2253:	80 00 3f             	addb   $0x3f,(%rax)
    2256:	1a 3a                	sbb    (%rdx),%bh
    2258:	2a 33                	sub    (%rbx),%dh
    225a:	24 22                	and    $0x22,%al
    225c:	00 00                	add    %al,(%rax)
    225e:	00 00                	add    %al,(%rax)
    2260:	14 00                	adc    $0x0,%al
    2262:	00 00                	add    %al,(%rax)
    2264:	5c                   	pop    %rsp
    2265:	00 00                	add    %al,(%rax)
    2267:	00 58 ee             	add    %bl,-0x12(%rax)
    226a:	ff                   	(bad)  
    226b:	ff 10                	callq  *(%rax)
	...
    2275:	00 00                	add    %al,(%rax)
    2277:	00 14 00             	add    %dl,(%rax,%rax,1)
    227a:	00 00                	add    %al,(%rax)
    227c:	74 00                	je     227e <__offload_func_table+0xd6>
    227e:	00 00                	add    %al,(%rax)
    2280:	50                   	push   %rax
    2281:	ee                   	out    %al,(%dx)
    2282:	ff                   	(bad)  
    2283:	ff 90 00 00 00 00    	callq  *0x0(%rax)
    2289:	00 00                	add    %al,(%rax)
    228b:	00 00                	add    %al,(%rax)
    228d:	00 00                	add    %al,(%rax)
    228f:	00 3c 00             	add    %bh,(%rax,%rax,1)
    2292:	00 00                	add    %al,(%rax)
    2294:	8c 00                	mov    %es,(%rax)
    2296:	00 00                	add    %al,(%rax)
    2298:	08 f3                	or     %dh,%bl
    229a:	ff                   	(bad)  
    229b:	ff 01                	incl   (%rcx)
    229d:	01 00                	add    %eax,(%rax)
    229f:	00 00                	add    %al,(%rax)
    22a1:	4f 0e                	rex.WRXB (bad) 
    22a3:	10 8d 02 42 0e 18    	adc    %cl,0x180e4202(%rbp)
    22a9:	8c 03                	mov    %es,(%rbx)
    22ab:	44 0e                	rex.R (bad) 
    22ad:	20 86 04 44 0e 28    	and    %al,0x280e4404(%rsi)
    22b3:	83 05 47 0e 40 02 d2 	addl   $0xffffffd2,0x2400e47(%rip)        # 2403101 <_end+0x23ff0e1>
    22ba:	0e                   	(bad)  
    22bb:	28 41 0e             	sub    %al,0xe(%rcx)
    22be:	20 41 0e             	and    %al,0xe(%rcx)
    22c1:	18 42 0e             	sbb    %al,0xe(%rdx)
    22c4:	10 42 0e             	adc    %al,0xe(%rdx)
    22c7:	08 48 c3             	or     %cl,-0x3d(%rax)
    22ca:	c6                   	(bad)  
    22cb:	cc                   	int3   
    22cc:	cd 00                	int    $0x0
    22ce:	00 00                	add    %al,(%rax)
    22d0:	30 00                	xor    %al,(%rax)
    22d2:	00 00                	add    %al,(%rax)
    22d4:	cc                   	int3   
    22d5:	00 00                	add    %al,(%rax)
    22d7:	00 d8                	add    %bl,%al
    22d9:	f3 ff                	repz (bad) 
    22db:	ff c3                	inc    %ebx
    22dd:	03 00                	add    (%rax),%eax
    22df:	00 00                	add    %al,(%rax)
    22e1:	4e 0e                	rex.WRX (bad) 
    22e3:	10 86 02 49 0d 06    	adc    %al,0x60d4902(%rsi)
    22e9:	50                   	push   %rax
    22ea:	8f 03                	popq   (%rbx)
    22ec:	8e 04 8d 05 8c 06 83 	mov    -0x7cf973fb(,%rcx,4),%es
    22f3:	07                   	(bad)  
    22f4:	03 9a 03 0c 07 08    	add    0x8070c03(%rdx),%ebx
    22fa:	41 c3                	rex.B retq 
    22fc:	c6                   	(bad)  
    22fd:	cc                   	int3   
    22fe:	cd ce                	int    $0xce
    2300:	cf                   	iret   
    2301:	00 00                	add    %al,(%rax)
    2303:	00 40 00             	add    %al,0x0(%rax)
    2306:	00 00                	add    %al,(%rax)
    2308:	00 01                	add    %al,(%rcx)
    230a:	00 00                	add    %al,(%rax)
    230c:	54                   	push   %rsp
    230d:	ee                   	out    %al,(%dx)
    230e:	ff                   	(bad)  
    230f:	ff 2e                	ljmp   *(%rsi)
    2311:	03 00                	add    (%rax),%eax
    2313:	00 00                	add    %al,(%rax)
    2315:	46 0e                	rex.RX (bad) 
    2317:	10 8e 02 42 0e 18    	adc    %cl,0x180e4202(%rsi)
    231d:	8d 03                	lea    (%rbx),%eax
    231f:	42 0e                	rex.X (bad) 
    2321:	20 8c 04 47 0e 28 86 	and    %cl,-0x79d7f1b9(%rsp,%rax,1)
    2328:	05 41 0e 30 83       	add    $0x83300e41,%eax
    232d:	06                   	(bad)  
    232e:	45 0e                	rex.RB (bad) 
    2330:	60                   	(bad)  
    2331:	03 0c 03             	add    (%rbx,%rax,1),%ecx
    2334:	0e                   	(bad)  
    2335:	30 43 0e             	xor    %al,0xe(%rbx)
    2338:	28 41 0e             	sub    %al,0xe(%rcx)
    233b:	20 42 0e             	and    %al,0xe(%rdx)
    233e:	18 42 0e             	sbb    %al,0xe(%rdx)
    2341:	10 42 0e             	adc    %al,0xe(%rdx)
    2344:	08 00                	or     %al,(%rax)
    2346:	00 00                	add    %al,(%rax)
    2348:	44 00 00             	add    %r8b,(%rax)
    234b:	00 44 01 00          	add    %al,0x0(%rcx,%rax,1)
    234f:	00 30                	add    %dh,(%rax)
    2351:	f7 ff                	idiv   %edi
    2353:	ff 65 00             	jmpq   *0x0(%rbp)
    2356:	00 00                	add    %al,(%rax)
    2358:	00 46 0e             	add    %al,0xe(%rsi)
    235b:	10 8f 02 49 0e 18    	adc    %cl,0x180e4902(%rdi)
    2361:	8e 03                	mov    (%rbx),%es
    2363:	45 0e                	rex.RB (bad) 
    2365:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
    236b:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff863031b5 <_end+0xffffffff862ff195>
    2371:	06                   	(bad)  
    2372:	48 0e                	rex.W (bad) 
    2374:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
    237a:	6e                   	outsb  %ds:(%rsi),(%dx)
    237b:	0e                   	(bad)  
    237c:	38 41 0e             	cmp    %al,0xe(%rcx)
    237f:	30 41 0e             	xor    %al,0xe(%rcx)
    2382:	28 42 0e             	sub    %al,0xe(%rdx)
    2385:	20 42 0e             	and    %al,0xe(%rdx)
    2388:	18 42 0e             	sbb    %al,0xe(%rdx)
    238b:	10 42 0e             	adc    %al,0xe(%rdx)
    238e:	08 00                	or     %al,(%rax)
    2390:	14 00                	adc    $0x0,%al
    2392:	00 00                	add    %al,(%rax)
    2394:	8c 01                	mov    %es,(%rcx)
    2396:	00 00                	add    %al,(%rax)
    2398:	58                   	pop    %rax
    2399:	f7 ff                	idiv   %edi
    239b:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 23a1 <__offload_func_table+0x1f9>
    23a1:	00 00                	add    %al,(%rax)
    23a3:	00 00                	add    %al,(%rax)
    23a5:	00 00                	add    %al,(%rax)
    23a7:	00 10                	add    %dl,(%rax)
    23a9:	00 00                	add    %al,(%rax)
    23ab:	00 a4 01 00 00 e0 f0 	add    %ah,-0xf200000(%rcx,%rax,1)
    23b2:	ff                   	(bad)  
    23b3:	ff 17                	callq  *(%rdi)
    23b5:	00 00                	add    %al,(%rax)
    23b7:	00 00                	add    %al,(%rax)
    23b9:	00 00                	add    %al,(%rax)
	...

00000000000023bc <__FRAME_END__>:
    23bc:	00 00                	add    %al,(%rax)
	...

Déassemblage de la section .init_array :

0000000000003d60 <__frame_dummy_init_array_entry>:
    3d60:	90                   	nop
    3d61:	15 00 00 00 00       	adc    $0x0,%eax
    3d66:	00 00                	add    %al,(%rax)
    3d68:	90                   	nop
    3d69:	14 00                	adc    $0x0,%al
    3d6b:	00 00                	add    %al,(%rax)
    3d6d:	00 00                	add    %al,(%rax)
	...

Déassemblage de la section .fini_array :

0000000000003d70 <__do_global_dtors_aux_fini_array_entry>:
    3d70:	50                   	push   %rax
    3d71:	15 00 00 00 00       	adc    $0x0,%eax
	...

Déassemblage de la section .dynamic :

0000000000003d78 <_DYNAMIC>:
    3d78:	01 00                	add    %eax,(%rax)
    3d7a:	00 00                	add    %al,(%rax)
    3d7c:	00 00                	add    %al,(%rax)
    3d7e:	00 00                	add    %al,(%rax)
    3d80:	01 00                	add    %eax,(%rax)
    3d82:	00 00                	add    %al,(%rax)
    3d84:	00 00                	add    %al,(%rax)
    3d86:	00 00                	add    %al,(%rax)
    3d88:	01 00                	add    %eax,(%rax)
    3d8a:	00 00                	add    %al,(%rax)
    3d8c:	00 00                	add    %al,(%rax)
    3d8e:	00 00                	add    %al,(%rax)
    3d90:	61                   	(bad)  
    3d91:	00 00                	add    %al,(%rax)
    3d93:	00 00                	add    %al,(%rax)
    3d95:	00 00                	add    %al,(%rax)
    3d97:	00 0c 00             	add    %cl,(%rax,%rax,1)
    3d9a:	00 00                	add    %al,(%rax)
    3d9c:	00 00                	add    %al,(%rax)
    3d9e:	00 00                	add    %al,(%rax)
    3da0:	00 10                	add    %dl,(%rax)
    3da2:	00 00                	add    %al,(%rax)
    3da4:	00 00                	add    %al,(%rax)
    3da6:	00 00                	add    %al,(%rax)
    3da8:	0d 00 00 00 00       	or     $0x0,%eax
    3dad:	00 00                	add    %al,(%rax)
    3daf:	00 f8                	add    %bh,%al
    3db1:	1a 00                	sbb    (%rax),%al
    3db3:	00 00                	add    %al,(%rax)
    3db5:	00 00                	add    %al,(%rax)
    3db7:	00 19                	add    %bl,(%rcx)
    3db9:	00 00                	add    %al,(%rax)
    3dbb:	00 00                	add    %al,(%rax)
    3dbd:	00 00                	add    %al,(%rax)
    3dbf:	00 60 3d             	add    %ah,0x3d(%rax)
    3dc2:	00 00                	add    %al,(%rax)
    3dc4:	00 00                	add    %al,(%rax)
    3dc6:	00 00                	add    %al,(%rax)
    3dc8:	1b 00                	sbb    (%rax),%eax
    3dca:	00 00                	add    %al,(%rax)
    3dcc:	00 00                	add    %al,(%rax)
    3dce:	00 00                	add    %al,(%rax)
    3dd0:	10 00                	adc    %al,(%rax)
    3dd2:	00 00                	add    %al,(%rax)
    3dd4:	00 00                	add    %al,(%rax)
    3dd6:	00 00                	add    %al,(%rax)
    3dd8:	1a 00                	sbb    (%rax),%al
    3dda:	00 00                	add    %al,(%rax)
    3ddc:	00 00                	add    %al,(%rax)
    3dde:	00 00                	add    %al,(%rax)
    3de0:	70 3d                	jo     3e1f <_DYNAMIC+0xa7>
    3de2:	00 00                	add    %al,(%rax)
    3de4:	00 00                	add    %al,(%rax)
    3de6:	00 00                	add    %al,(%rax)
    3de8:	1c 00                	sbb    $0x0,%al
    3dea:	00 00                	add    %al,(%rax)
    3dec:	00 00                	add    %al,(%rax)
    3dee:	00 00                	add    %al,(%rax)
    3df0:	08 00                	or     %al,(%rax)
    3df2:	00 00                	add    %al,(%rax)
    3df4:	00 00                	add    %al,(%rax)
    3df6:	00 00                	add    %al,(%rax)
    3df8:	f5                   	cmc    
    3df9:	fe                   	(bad)  
    3dfa:	ff 6f 00             	ljmp   *0x0(%rdi)
    3dfd:	00 00                	add    %al,(%rax)
    3dff:	00 a0 03 00 00 00    	add    %ah,0x3(%rax)
    3e05:	00 00                	add    %al,(%rax)
    3e07:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 3e0d <_DYNAMIC+0x95>
    3e0d:	00 00                	add    %al,(%rax)
    3e0f:	00 48 05             	add    %cl,0x5(%rax)
    3e12:	00 00                	add    %al,(%rax)
    3e14:	00 00                	add    %al,(%rax)
    3e16:	00 00                	add    %al,(%rax)
    3e18:	06                   	(bad)  
    3e19:	00 00                	add    %al,(%rax)
    3e1b:	00 00                	add    %al,(%rax)
    3e1d:	00 00                	add    %al,(%rax)
    3e1f:	00 c8                	add    %cl,%al
    3e21:	03 00                	add    (%rax),%eax
    3e23:	00 00                	add    %al,(%rax)
    3e25:	00 00                	add    %al,(%rax)
    3e27:	00 0a                	add    %cl,(%rdx)
    3e29:	00 00                	add    %al,(%rax)
    3e2b:	00 00                	add    %al,(%rax)
    3e2d:	00 00                	add    %al,(%rax)
    3e2f:	00 fe                	add    %bh,%dh
    3e31:	00 00                	add    %al,(%rax)
    3e33:	00 00                	add    %al,(%rax)
    3e35:	00 00                	add    %al,(%rax)
    3e37:	00 0b                	add    %cl,(%rbx)
    3e39:	00 00                	add    %al,(%rax)
    3e3b:	00 00                	add    %al,(%rax)
    3e3d:	00 00                	add    %al,(%rax)
    3e3f:	00 18                	add    %bl,(%rax)
    3e41:	00 00                	add    %al,(%rax)
    3e43:	00 00                	add    %al,(%rax)
    3e45:	00 00                	add    %al,(%rax)
    3e47:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 3e4d <_DYNAMIC+0xd5>
	...
    3e55:	00 00                	add    %al,(%rax)
    3e57:	00 03                	add    %al,(%rbx)
    3e59:	00 00                	add    %al,(%rax)
    3e5b:	00 00                	add    %al,(%rax)
    3e5d:	00 00                	add    %al,(%rax)
    3e5f:	00 78 3f             	add    %bh,0x3f(%rax)
    3e62:	00 00                	add    %al,(%rax)
    3e64:	00 00                	add    %al,(%rax)
    3e66:	00 00                	add    %al,(%rax)
    3e68:	02 00                	add    (%rax),%al
    3e6a:	00 00                	add    %al,(%rax)
    3e6c:	00 00                	add    %al,(%rax)
    3e6e:	00 00                	add    %al,(%rax)
    3e70:	d8 00                	fadds  (%rax)
    3e72:	00 00                	add    %al,(%rax)
    3e74:	00 00                	add    %al,(%rax)
    3e76:	00 00                	add    %al,(%rax)
    3e78:	14 00                	adc    $0x0,%al
    3e7a:	00 00                	add    %al,(%rax)
    3e7c:	00 00                	add    %al,(%rax)
    3e7e:	00 00                	add    %al,(%rax)
    3e80:	07                   	(bad)  
    3e81:	00 00                	add    %al,(%rax)
    3e83:	00 00                	add    %al,(%rax)
    3e85:	00 00                	add    %al,(%rax)
    3e87:	00 17                	add    %dl,(%rdi)
    3e89:	00 00                	add    %al,(%rax)
    3e8b:	00 00                	add    %al,(%rax)
    3e8d:	00 00                	add    %al,(%rax)
    3e8f:	00 b8 07 00 00 00    	add    %bh,0x7(%rax)
    3e95:	00 00                	add    %al,(%rax)
    3e97:	00 07                	add    %al,(%rdi)
    3e99:	00 00                	add    %al,(%rax)
    3e9b:	00 00                	add    %al,(%rax)
    3e9d:	00 00                	add    %al,(%rax)
    3e9f:	00 c8                	add    %cl,%al
    3ea1:	06                   	(bad)  
    3ea2:	00 00                	add    %al,(%rax)
    3ea4:	00 00                	add    %al,(%rax)
    3ea6:	00 00                	add    %al,(%rax)
    3ea8:	08 00                	or     %al,(%rax)
    3eaa:	00 00                	add    %al,(%rax)
    3eac:	00 00                	add    %al,(%rax)
    3eae:	00 00                	add    %al,(%rax)
    3eb0:	f0 00 00             	lock add %al,(%rax)
    3eb3:	00 00                	add    %al,(%rax)
    3eb5:	00 00                	add    %al,(%rax)
    3eb7:	00 09                	add    %cl,(%rcx)
    3eb9:	00 00                	add    %al,(%rax)
    3ebb:	00 00                	add    %al,(%rax)
    3ebd:	00 00                	add    %al,(%rax)
    3ebf:	00 18                	add    %bl,(%rax)
    3ec1:	00 00                	add    %al,(%rax)
    3ec3:	00 00                	add    %al,(%rax)
    3ec5:	00 00                	add    %al,(%rax)
    3ec7:	00 1e                	add    %bl,(%rsi)
    3ec9:	00 00                	add    %al,(%rax)
    3ecb:	00 00                	add    %al,(%rax)
    3ecd:	00 00                	add    %al,(%rax)
    3ecf:	00 08                	add    %cl,(%rax)
    3ed1:	00 00                	add    %al,(%rax)
    3ed3:	00 00                	add    %al,(%rax)
    3ed5:	00 00                	add    %al,(%rax)
    3ed7:	00 fb                	add    %bh,%bl
    3ed9:	ff                   	(bad)  
    3eda:	ff 6f 00             	ljmp   *0x0(%rdi)
    3edd:	00 00                	add    %al,(%rax)
    3edf:	00 01                	add    %al,(%rcx)
    3ee1:	00 00                	add    %al,(%rax)
    3ee3:	08 00                	or     %al,(%rax)
    3ee5:	00 00                	add    %al,(%rax)
    3ee7:	00 fe                	add    %bh,%dh
    3ee9:	ff                   	(bad)  
    3eea:	ff 6f 00             	ljmp   *0x0(%rdi)
    3eed:	00 00                	add    %al,(%rax)
    3eef:	00 68 06             	add    %ch,0x6(%rax)
    3ef2:	00 00                	add    %al,(%rax)
    3ef4:	00 00                	add    %al,(%rax)
    3ef6:	00 00                	add    %al,(%rax)
    3ef8:	ff                   	(bad)  
    3ef9:	ff                   	(bad)  
    3efa:	ff 6f 00             	ljmp   *0x0(%rdi)
    3efd:	00 00                	add    %al,(%rax)
    3eff:	00 02                	add    %al,(%rdx)
    3f01:	00 00                	add    %al,(%rax)
    3f03:	00 00                	add    %al,(%rax)
    3f05:	00 00                	add    %al,(%rax)
    3f07:	00 f0                	add    %dh,%al
    3f09:	ff                   	(bad)  
    3f0a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f0d:	00 00                	add    %al,(%rax)
    3f0f:	00 46 06             	add    %al,0x6(%rsi)
    3f12:	00 00                	add    %al,(%rax)
    3f14:	00 00                	add    %al,(%rax)
    3f16:	00 00                	add    %al,(%rax)
    3f18:	f9                   	stc    
    3f19:	ff                   	(bad)  
    3f1a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f1d:	00 00                	add    %al,(%rax)
    3f1f:	00 04 00             	add    %al,(%rax,%rax,1)
	...

Déassemblage de la section .got :

0000000000003f78 <_GLOBAL_OFFSET_TABLE_>:
    3f78:	78 3d                	js     3fb7 <_GLOBAL_OFFSET_TABLE_+0x3f>
	...
    3f8e:	00 00                	add    %al,(%rax)
    3f90:	30 10                	xor    %dl,(%rax)
    3f92:	00 00                	add    %al,(%rax)
    3f94:	00 00                	add    %al,(%rax)
    3f96:	00 00                	add    %al,(%rax)
    3f98:	40 10 00             	adc    %al,(%rax)
    3f9b:	00 00                	add    %al,(%rax)
    3f9d:	00 00                	add    %al,(%rax)
    3f9f:	00 50 10             	add    %dl,0x10(%rax)
    3fa2:	00 00                	add    %al,(%rax)
    3fa4:	00 00                	add    %al,(%rax)
    3fa6:	00 00                	add    %al,(%rax)
    3fa8:	60                   	(bad)  
    3fa9:	10 00                	adc    %al,(%rax)
    3fab:	00 00                	add    %al,(%rax)
    3fad:	00 00                	add    %al,(%rax)
    3faf:	00 70 10             	add    %dh,0x10(%rax)
    3fb2:	00 00                	add    %al,(%rax)
    3fb4:	00 00                	add    %al,(%rax)
    3fb6:	00 00                	add    %al,(%rax)
    3fb8:	80 10 00             	adcb   $0x0,(%rax)
    3fbb:	00 00                	add    %al,(%rax)
    3fbd:	00 00                	add    %al,(%rax)
    3fbf:	00 90 10 00 00 00    	add    %dl,0x10(%rax)
    3fc5:	00 00                	add    %al,(%rax)
    3fc7:	00 a0 10 00 00 00    	add    %ah,0x10(%rax)
    3fcd:	00 00                	add    %al,(%rax)
    3fcf:	00 b0 10 00 00 00    	add    %dh,0x10(%rax)
	...

Déassemblage de la section .data :

0000000000004000 <__data_start>:
	...

0000000000004008 <__dso_handle>:
    4008:	08 40 00             	or     %al,0x0(%rax)
    400b:	00 00                	add    %al,(%rax)
    400d:	00 00                	add    %al,(%rax)
	...

Déassemblage de la section .bss :

0000000000004010 <stdout@@GLIBC_2.2.5>:
	...

0000000000004018 <completed.8060>:
	...

Déassemblage de la section .comment :

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0xf88>
   a:	74 75                	je     81 <_init-0xf7f>
   c:	20 39                	and    %bh,(%rcx)
   e:	2e 33 2e             	xor    %cs:(%rsi),%ebp
  11:	30 2d 31 37 75 62    	xor    %ch,0x62753731(%rip)        # 62753748 <_end+0x6274f728>
  17:	75 6e                	jne    87 <_init-0xf79>
  19:	74 75                	je     90 <_init-0xf70>
  1b:	31 7e 32             	xor    %edi,0x32(%rsi)
  1e:	30 2e                	xor    %ch,(%rsi)
  20:	30 34 29             	xor    %dh,(%rcx,%rbp,1)
  23:	20 39                	and    %bh,(%rcx)
  25:	2e 33 2e             	xor    %cs:(%rsi),%ebp
  28:	30 00                	xor    %al,(%rax)

Déassemblage de la section .debug_aranges :

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	02 00                	add    (%rax),%al
   6:	00 00                	add    %al,(%rax)
   8:	00 00                	add    %al,(%rax)
   a:	08 00                	or     %al,(%rax)
   c:	00 00                	add    %al,(%rax)
   e:	00 00                	add    %al,(%rax)
  10:	90                   	nop
  11:	14 00                	adc    $0x0,%al
  13:	00 00                	add    %al,(%rax)
  15:	00 00                	add    %al,(%rax)
  17:	00 17                	add    %dl,(%rdi)
	...

Déassemblage de la section .debug_info :

0000000000000000 <.debug_info>:
   0:	60                   	(bad)  
   1:	00 00                	add    %al,(%rax)
   3:	00 04 00             	add    %al,(%rax,%rax,1)
   6:	00 00                	add    %al,(%rax)
   8:	00 00                	add    %al,(%rax)
   a:	08 01                	or     %al,(%rcx)
   c:	8d 00                	lea    (%rax),%eax
   e:	00 00                	add    %al,(%rax)
  10:	0c 06                	or     $0x6,%al
  12:	00 00                	add    %al,(%rax)
  14:	00 34 00             	add    %dh,(%rax,%rax,1)
	...
  27:	00 00                	add    %al,(%rax)
  29:	02 72 00             	add    0x0(%rdx),%dh
  2c:	00 00                	add    %al,(%rax)
  2e:	01 53 01             	add    %edx,0x1(%rbx)
  31:	90                   	nop
  32:	14 00                	adc    $0x0,%al
  34:	00 00                	add    %al,(%rax)
  36:	00 00                	add    %al,(%rax)
  38:	00 17                	add    %dl,(%rdi)
  3a:	00 00                	add    %al,(%rax)
  3c:	00 00                	add    %al,(%rax)
  3e:	00 00                	add    %al,(%rax)
  40:	00 01                	add    %al,(%rcx)
  42:	9c                   	pushfq 
  43:	5c                   	pop    %rsp
  44:	00 00                	add    %al,(%rax)
  46:	00 03                	add    %al,(%rbx)
  48:	00 00                	add    %al,(%rax)
  4a:	00 00                	add    %al,(%rax)
  4c:	01 5e 10             	add    %ebx,0x10(%rsi)
  4f:	5c                   	pop    %rsp
  50:	00 00                	add    %al,(%rax)
  52:	00 06                	add    %al,(%rsi)
	...
  5c:	04 04                	add    $0x4,%al
  5e:	07                   	(bad)  
  5f:	80 00 00             	addb   $0x0,(%rax)
	...

Déassemblage de la section .debug_abbrev :

0000000000000000 <.debug_abbrev>:
   0:	01 11                	add    %edx,(%rcx)
   2:	01 25 0e 13 0b 03    	add    %esp,0x30b130e(%rip)        # 30b1316 <_end+0x30ad2f6>
   8:	0e                   	(bad)  
   9:	1b 0e                	sbb    (%rsi),%ecx
   b:	55                   	push   %rbp
   c:	17                   	(bad)  
   d:	11 01                	adc    %eax,(%rcx)
   f:	10 17                	adc    %dl,(%rdi)
  11:	00 00                	add    %al,(%rax)
  13:	02 2e                	add    (%rsi),%ch
  15:	01 03                	add    %eax,(%rbx)
  17:	0e                   	(bad)  
  18:	3a 0b                	cmp    (%rbx),%cl
  1a:	3b 0b                	cmp    (%rbx),%ecx
  1c:	39 0b                	cmp    %ecx,(%rbx)
  1e:	27                   	(bad)  
  1f:	19 11                	sbb    %edx,(%rcx)
  21:	01 12                	add    %edx,(%rdx)
  23:	07                   	(bad)  
  24:	40 18 97 42 19 01 13 	sbb    %dl,0x13011942(%rdi)
  2b:	00 00                	add    %al,(%rax)
  2d:	03 34 00             	add    (%rax,%rax,1),%esi
  30:	03 0e                	add    (%rsi),%ecx
  32:	3a 0b                	cmp    (%rbx),%cl
  34:	3b 0b                	cmp    (%rbx),%ecx
  36:	39 0b                	cmp    %ecx,(%rbx)
  38:	49 13 02             	adc    (%r10),%rax
  3b:	17                   	(bad)  
  3c:	b7 42                	mov    $0x42,%bh
  3e:	17                   	(bad)  
  3f:	00 00                	add    %al,(%rax)
  41:	04 24                	add    $0x24,%al
  43:	00 0b                	add    %cl,(%rbx)
  45:	0b 3e                	or     (%rsi),%edi
  47:	0b 03                	or     (%rbx),%eax
  49:	0e                   	(bad)  
  4a:	00 00                	add    %al,(%rax)
	...

Déassemblage de la section .debug_line :

0000000000000000 <.debug_line>:
   0:	73 00                	jae    2 <_init-0xffe>
   2:	00 00                	add    %al,(%rax)
   4:	03 00                	add    (%rax),%eax
   6:	44 00 00             	add    %r8b,(%rax)
   9:	00 01                	add    %al,(%rcx)
   b:	01 fb                	add    %edi,%ebx
   d:	0e                   	(bad)  
   e:	0d 00 01 01 01       	or     $0x1010100,%eax
  13:	01 00                	add    %eax,(%rax)
  15:	00 00                	add    %al,(%rax)
  17:	01 00                	add    %eax,(%rax)
  19:	00 01                	add    %al,(%rcx)
  1b:	2e 2e 2f             	cs cs (bad) 
  1e:	2e 2e 2f             	cs cs (bad) 
  21:	2e 2e 2f             	cs cs (bad) 
  24:	73 72                	jae    98 <_init-0xf68>
  26:	63 2f                	movslq (%rdi),%ebp
  28:	6c                   	insb   (%dx),%es:(%rdi)
  29:	69 62 67 63 63 2f 63 	imul   $0x632f6363,0x67(%rdx),%esp
  30:	6f                   	outsl  %ds:(%rsi),(%dx)
  31:	6e                   	outsb  %ds:(%rsi),(%dx)
  32:	66 69 67 2f 69 33    	imul   $0x3369,0x2f(%rdi),%sp
  38:	38 36                	cmp    %dh,(%rsi)
  3a:	00 00                	add    %al,(%rax)
  3c:	63 72 74             	movslq 0x74(%rdx),%esi
  3f:	66 61                	data16 (bad) 
  41:	73 74                	jae    b7 <_init-0xf49>
  43:	6d                   	insl   (%dx),%es:(%rdi)
  44:	61                   	(bad)  
  45:	74 68                	je     af <_init-0xf51>
  47:	2e 63 00             	movslq %cs:(%rax),%eax
  4a:	01 00                	add    %eax,(%rax)
  4c:	00 00                	add    %al,(%rax)
  4e:	05 01 00 09 02       	add    $0x2090001,%eax
  53:	90                   	nop
  54:	14 00                	adc    $0x0,%al
  56:	00 00                	add    %al,(%rax)
  58:	00 00                	add    %al,(%rax)
  5a:	00 03                	add    %al,(%rbx)
  5c:	d3 00                	roll   %cl,(%rax)
  5e:	01 05 03 03 0a 4a    	add    %eax,0x4a0a0303(%rip)        # 4a0a0367 <_end+0x4a09c347>
  64:	05 18 06 01 05       	add    $0x5010618,%eax
  69:	03 06                	add    (%rsi),%eax
  6b:	59                   	pop    %rcx
  6c:	13 06                	adc    (%rsi),%eax
  6e:	82                   	(bad)  
  6f:	05 01 5a 02 01       	add    $0x1025a01,%eax
  74:	00 01                	add    %al,(%rcx)
  76:	01                   	.byte 0x1

Déassemblage de la section .debug_str :

0000000000000000 <.debug_str>:
   0:	6d                   	insl   (%dx),%es:(%rdi)
   1:	78 63                	js     66 <_init-0xf9a>
   3:	73 72                	jae    77 <_init-0xf89>
   5:	00 2e                	add    %ch,(%rsi)
   7:	2e 2f                	cs (bad) 
   9:	2e 2e 2f             	cs cs (bad) 
   c:	2e 2e 2f             	cs cs (bad) 
   f:	73 72                	jae    83 <_init-0xf7d>
  11:	63 2f                	movslq (%rdi),%ebp
  13:	6c                   	insb   (%dx),%es:(%rdi)
  14:	69 62 67 63 63 2f 63 	imul   $0x632f6363,0x67(%rdx),%esp
  1b:	6f                   	outsl  %ds:(%rsi),(%dx)
  1c:	6e                   	outsb  %ds:(%rsi),(%dx)
  1d:	66 69 67 2f 69 33    	imul   $0x3369,0x2f(%rdi),%sp
  23:	38 36                	cmp    %dh,(%rsi)
  25:	2f                   	(bad)  
  26:	63 72 74             	movslq 0x74(%rdx),%esi
  29:	66 61                	data16 (bad) 
  2b:	73 74                	jae    a1 <_init-0xf5f>
  2d:	6d                   	insl   (%dx),%es:(%rdi)
  2e:	61                   	(bad)  
  2f:	74 68                	je     99 <_init-0xf67>
  31:	2e 63 00             	movslq %cs:(%rax),%eax
  34:	2f                   	(bad)  
  35:	62                   	(bad)  
  36:	75 69                	jne    a1 <_init-0xf5f>
  38:	6c                   	insb   (%dx),%es:(%rdi)
  39:	64 2f                	fs (bad) 
  3b:	67 63 63 2d          	movslq 0x2d(%ebx),%esp
  3f:	39 2d 48 73 6b 5a    	cmp    %ebp,0x5a6b7348(%rip)        # 5a6b738d <_end+0x5a6b336d>
  45:	45 61                	rex.RB (bad) 
  47:	2f                   	(bad)  
  48:	67 63 63 2d          	movslq 0x2d(%ebx),%esp
  4c:	39 2d 39 2e 33 2e    	cmp    %ebp,0x2e332e39(%rip)        # 2e332e8b <_end+0x2e32ee6b>
  52:	30 2f                	xor    %ch,(%rdi)
  54:	62                   	(bad)  
  55:	75 69                	jne    c0 <_init-0xf40>
  57:	6c                   	insb   (%dx),%es:(%rdi)
  58:	64 2f                	fs (bad) 
  5a:	78 38                	js     94 <_init-0xf6c>
  5c:	36 5f                	ss pop %rdi
  5e:	36 34 2d             	ss xor $0x2d,%al
  61:	6c                   	insb   (%dx),%es:(%rdi)
  62:	69 6e 75 78 2d 67 6e 	imul   $0x6e672d78,0x75(%rsi),%ebp
  69:	75 2f                	jne    9a <_init-0xf66>
  6b:	6c                   	insb   (%dx),%es:(%rdi)
  6c:	69 62 67 63 63 00 73 	imul   $0x73006363,0x67(%rdx),%esp
  73:	65 74 5f             	gs je  d5 <_init-0xf2b>
  76:	66 61                	data16 (bad) 
  78:	73 74                	jae    ee <_init-0xf12>
  7a:	5f                   	pop    %rdi
  7b:	6d                   	insl   (%dx),%es:(%rdi)
  7c:	61                   	(bad)  
  7d:	74 68                	je     e7 <_init-0xf19>
  7f:	00 75 6e             	add    %dh,0x6e(%rbp)
  82:	73 69                	jae    ed <_init-0xf13>
  84:	67 6e                	outsb  %ds:(%esi),(%dx)
  86:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%rcx)
  8b:	74 00                	je     8d <_init-0xf73>
  8d:	47                   	rex.RXB
  8e:	4e 55                	rex.WRX push %rbp
  90:	20 43 31             	and    %al,0x31(%rbx)
  93:	37                   	(bad)  
  94:	20 39                	and    %bh,(%rcx)
  96:	2e 33 2e             	xor    %cs:(%rsi),%ebp
  99:	30 20                	xor    %ah,(%rax)
  9b:	2d 6d 6c 6f 6e       	sub    $0x6e6f6c6d,%eax
  a0:	67 2d 64 6f 75 62    	addr32 sub $0x62756f64,%eax
  a6:	6c                   	insb   (%dx),%es:(%rdi)
  a7:	65 2d 38 30 20 2d    	gs sub $0x2d203038,%eax
  ad:	6d                   	insl   (%dx),%es:(%rdi)
  ae:	74 75                	je     125 <_init-0xedb>
  b0:	6e                   	outsb  %ds:(%rsi),(%dx)
  b1:	65 3d 67 65 6e 65    	gs cmp $0x656e6567,%eax
  b7:	72 69                	jb     122 <_init-0xede>
  b9:	63 20                	movslq (%rax),%esp
  bb:	2d 6d 61 72 63       	sub    $0x6372616d,%eax
  c0:	68 3d 78 38 36       	pushq  $0x3638783d
  c5:	2d 36 34 20 2d       	sub    $0x2d203436,%eax
  ca:	67 20 2d 67 20 2d 67 	and    %ch,0x672d2067(%eip)        # 672d2138 <_end+0x672ce118>
  d1:	20 2d 4f 32 20 2d    	and    %ch,0x2d20324f(%rip)        # 2d203326 <_end+0x2d1ff306>
  d7:	4f 32 20             	rex.WRXB xor (%r8),%r12b
  da:	2d 4f 32 20 2d       	sub    $0x2d20324f,%eax
  df:	66 62                	data16 (bad) 
  e1:	75 69                	jne    14c <_init-0xeb4>
  e3:	6c                   	insb   (%dx),%es:(%rdi)
  e4:	64 69 6e 67 2d 6c 69 	imul   $0x62696c2d,%fs:0x67(%rsi),%ebp
  eb:	62 
  ec:	67 63 63 20          	movslq 0x20(%ebx),%esp
  f0:	2d 66 6e 6f 2d       	sub    $0x2d6f6e66,%eax
  f5:	73 74                	jae    16b <_init-0xe95>
  f7:	61                   	(bad)  
  f8:	63 6b 2d             	movslq 0x2d(%rbx),%ebp
  fb:	70 72                	jo     16f <_init-0xe91>
  fd:	6f                   	outsl  %ds:(%rsi),(%dx)
  fe:	74 65                	je     165 <_init-0xe9b>
 100:	63 74 6f 72          	movslq 0x72(%rdi,%rbp,2),%esi
 104:	20 2d 66 70 69 63    	and    %ch,0x63697066(%rip)        # 63697170 <_end+0x63693150>
 10a:	20 2d 66 61 73 79    	and    %ch,0x79736166(%rip)        # 79736276 <_end+0x79732256>
 110:	6e                   	outsb  %ds:(%rsi),(%dx)
 111:	63 68 72             	movslq 0x72(%rax),%ebp
 114:	6f                   	outsl  %ds:(%rsi),(%dx)
 115:	6e                   	outsb  %ds:(%rsi),(%dx)
 116:	6f                   	outsl  %ds:(%rsi),(%dx)
 117:	75 73                	jne    18c <_init-0xe74>
 119:	2d 75 6e 77 69       	sub    $0x69776e75,%eax
 11e:	6e                   	outsb  %ds:(%rsi),(%dx)
 11f:	64 2d 74 61 62 6c    	fs sub $0x6c626174,%eax
 125:	65 73 20             	gs jae 148 <_init-0xeb8>
 128:	2d 66 73 74 61       	sub    $0x61747366,%eax
 12d:	63 6b 2d             	movslq 0x2d(%rbx),%ebp
 130:	63 6c 61 73          	movslq 0x73(%rcx,%riz,2),%ebp
 134:	68 2d 70 72 6f       	pushq  $0x6f72702d
 139:	74 65                	je     1a0 <_init-0xe60>
 13b:	63 74 69 6f          	movslq 0x6f(%rcx,%rbp,2),%esi
 13f:	6e                   	outsb  %ds:(%rsi),(%dx)
 140:	20 2d 66 63 66 2d    	and    %ch,0x2d666366(%rip)        # 2d6664ac <_end+0x2d66248c>
 146:	70 72                	jo     1ba <_init-0xe46>
 148:	6f                   	outsl  %ds:(%rsi),(%dx)
 149:	74 65                	je     1b0 <_init-0xe50>
 14b:	63 74 69 6f          	movslq 0x6f(%rcx,%rbp,2),%esi
 14f:	6e                   	outsb  %ds:(%rsi),(%dx)
	...

Déassemblage de la section .debug_loc :

0000000000000000 <.debug_loc>:
   0:	00 01                	add    %al,(%rcx)
   2:	01 00                	add    %eax,(%rax)
   4:	00 00                	add    %al,(%rax)
   6:	99                   	cltd   
   7:	14 00                	adc    $0x0,%al
   9:	00 00                	add    %al,(%rax)
   b:	00 00                	add    %al,(%rax)
   d:	00 99 14 00 00 00    	add    %bl,0x14(%rcx)
  13:	00 00                	add    %al,(%rax)
  15:	00 02                	add    %al,(%rdx)
  17:	00 91 74 99 14 00    	add    %dl,0x149974(%rcx)
  1d:	00 00                	add    %al,(%rax)
  1f:	00 00                	add    %al,(%rax)
  21:	00 a1 14 00 00 00    	add    %ah,0x14(%rcx)
  27:	00 00                	add    %al,(%rax)
  29:	00 09                	add    %cl,(%rcx)
  2b:	00 91 74 94 04 0a    	add    %dl,0xa049474(%rcx)
  31:	40 80 21 9f          	rex andb $0x9f,(%rcx)
  35:	a1 14 00 00 00 00 00 	movabs 0xa700000000000014,%eax
  3c:	00 a7 
  3e:	14 00                	adc    $0x0,%al
  40:	00 00                	add    %al,(%rax)
  42:	00 00                	add    %al,(%rax)
  44:	00 02                	add    %al,(%rdx)
  46:	00 91 74 00 00 00    	add    %dl,0x74(%rcx)
	...

Déassemblage de la section .debug_ranges :

0000000000000000 <.debug_ranges>:
   0:	90                   	nop
   1:	14 00                	adc    $0x0,%al
   3:	00 00                	add    %al,(%rax)
   5:	00 00                	add    %al,(%rax)
   7:	00 a7 14 00 00 00    	add    %ah,0x14(%rdi)
	...
